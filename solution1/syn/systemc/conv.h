// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_HH_
#define _conv_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "compute_output.h"
#include "load_input.h"
#include "conv_fm_in_buff1_ibs.h"
#include "conv_CTRL_s_axi.h"
#include "conv_IN1_m_axi.h"
#include "conv_IN2_m_axi.h"
#include "conv_IN3_m_axi.h"
#include "conv_W_m_axi.h"
#include "conv_OUT_r_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_IN1_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IN1_ID_WIDTH = 1,
         unsigned int C_M_AXI_IN1_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN1_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IN1_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN1_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN1_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN1_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN2_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IN2_ID_WIDTH = 1,
         unsigned int C_M_AXI_IN2_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN2_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IN2_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN2_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN2_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN2_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN3_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_IN3_ID_WIDTH = 1,
         unsigned int C_M_AXI_IN3_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN3_DATA_WIDTH = 32,
         unsigned int C_M_AXI_IN3_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN3_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN3_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_IN3_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_W_ID_WIDTH = 1,
         unsigned int C_M_AXI_W_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_DATA_WIDTH = 32,
         unsigned int C_M_AXI_W_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_W_BUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_OUT_R_ID_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_DATA_WIDTH = 64,
         unsigned int C_M_AXI_OUT_R_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_OUT_R_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_CTRL_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CTRL_DATA_WIDTH = 32>
struct conv : public sc_module {
    // Port declarations 245
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_IN1_AWVALID;
    sc_in< sc_logic > m_axi_IN1_AWREADY;
    sc_out< sc_uint<C_M_AXI_IN1_ADDR_WIDTH> > m_axi_IN1_AWADDR;
    sc_out< sc_uint<C_M_AXI_IN1_ID_WIDTH> > m_axi_IN1_AWID;
    sc_out< sc_lv<8> > m_axi_IN1_AWLEN;
    sc_out< sc_lv<3> > m_axi_IN1_AWSIZE;
    sc_out< sc_lv<2> > m_axi_IN1_AWBURST;
    sc_out< sc_lv<2> > m_axi_IN1_AWLOCK;
    sc_out< sc_lv<4> > m_axi_IN1_AWCACHE;
    sc_out< sc_lv<3> > m_axi_IN1_AWPROT;
    sc_out< sc_lv<4> > m_axi_IN1_AWQOS;
    sc_out< sc_lv<4> > m_axi_IN1_AWREGION;
    sc_out< sc_uint<C_M_AXI_IN1_AWUSER_WIDTH> > m_axi_IN1_AWUSER;
    sc_out< sc_logic > m_axi_IN1_WVALID;
    sc_in< sc_logic > m_axi_IN1_WREADY;
    sc_out< sc_uint<C_M_AXI_IN1_DATA_WIDTH> > m_axi_IN1_WDATA;
    sc_out< sc_uint<C_M_AXI_IN1_DATA_WIDTH/8> > m_axi_IN1_WSTRB;
    sc_out< sc_logic > m_axi_IN1_WLAST;
    sc_out< sc_uint<C_M_AXI_IN1_ID_WIDTH> > m_axi_IN1_WID;
    sc_out< sc_uint<C_M_AXI_IN1_WUSER_WIDTH> > m_axi_IN1_WUSER;
    sc_out< sc_logic > m_axi_IN1_ARVALID;
    sc_in< sc_logic > m_axi_IN1_ARREADY;
    sc_out< sc_uint<C_M_AXI_IN1_ADDR_WIDTH> > m_axi_IN1_ARADDR;
    sc_out< sc_uint<C_M_AXI_IN1_ID_WIDTH> > m_axi_IN1_ARID;
    sc_out< sc_lv<8> > m_axi_IN1_ARLEN;
    sc_out< sc_lv<3> > m_axi_IN1_ARSIZE;
    sc_out< sc_lv<2> > m_axi_IN1_ARBURST;
    sc_out< sc_lv<2> > m_axi_IN1_ARLOCK;
    sc_out< sc_lv<4> > m_axi_IN1_ARCACHE;
    sc_out< sc_lv<3> > m_axi_IN1_ARPROT;
    sc_out< sc_lv<4> > m_axi_IN1_ARQOS;
    sc_out< sc_lv<4> > m_axi_IN1_ARREGION;
    sc_out< sc_uint<C_M_AXI_IN1_ARUSER_WIDTH> > m_axi_IN1_ARUSER;
    sc_in< sc_logic > m_axi_IN1_RVALID;
    sc_out< sc_logic > m_axi_IN1_RREADY;
    sc_in< sc_uint<C_M_AXI_IN1_DATA_WIDTH> > m_axi_IN1_RDATA;
    sc_in< sc_logic > m_axi_IN1_RLAST;
    sc_in< sc_uint<C_M_AXI_IN1_ID_WIDTH> > m_axi_IN1_RID;
    sc_in< sc_uint<C_M_AXI_IN1_RUSER_WIDTH> > m_axi_IN1_RUSER;
    sc_in< sc_lv<2> > m_axi_IN1_RRESP;
    sc_in< sc_logic > m_axi_IN1_BVALID;
    sc_out< sc_logic > m_axi_IN1_BREADY;
    sc_in< sc_lv<2> > m_axi_IN1_BRESP;
    sc_in< sc_uint<C_M_AXI_IN1_ID_WIDTH> > m_axi_IN1_BID;
    sc_in< sc_uint<C_M_AXI_IN1_BUSER_WIDTH> > m_axi_IN1_BUSER;
    sc_out< sc_logic > m_axi_IN2_AWVALID;
    sc_in< sc_logic > m_axi_IN2_AWREADY;
    sc_out< sc_uint<C_M_AXI_IN2_ADDR_WIDTH> > m_axi_IN2_AWADDR;
    sc_out< sc_uint<C_M_AXI_IN2_ID_WIDTH> > m_axi_IN2_AWID;
    sc_out< sc_lv<8> > m_axi_IN2_AWLEN;
    sc_out< sc_lv<3> > m_axi_IN2_AWSIZE;
    sc_out< sc_lv<2> > m_axi_IN2_AWBURST;
    sc_out< sc_lv<2> > m_axi_IN2_AWLOCK;
    sc_out< sc_lv<4> > m_axi_IN2_AWCACHE;
    sc_out< sc_lv<3> > m_axi_IN2_AWPROT;
    sc_out< sc_lv<4> > m_axi_IN2_AWQOS;
    sc_out< sc_lv<4> > m_axi_IN2_AWREGION;
    sc_out< sc_uint<C_M_AXI_IN2_AWUSER_WIDTH> > m_axi_IN2_AWUSER;
    sc_out< sc_logic > m_axi_IN2_WVALID;
    sc_in< sc_logic > m_axi_IN2_WREADY;
    sc_out< sc_uint<C_M_AXI_IN2_DATA_WIDTH> > m_axi_IN2_WDATA;
    sc_out< sc_uint<C_M_AXI_IN2_DATA_WIDTH/8> > m_axi_IN2_WSTRB;
    sc_out< sc_logic > m_axi_IN2_WLAST;
    sc_out< sc_uint<C_M_AXI_IN2_ID_WIDTH> > m_axi_IN2_WID;
    sc_out< sc_uint<C_M_AXI_IN2_WUSER_WIDTH> > m_axi_IN2_WUSER;
    sc_out< sc_logic > m_axi_IN2_ARVALID;
    sc_in< sc_logic > m_axi_IN2_ARREADY;
    sc_out< sc_uint<C_M_AXI_IN2_ADDR_WIDTH> > m_axi_IN2_ARADDR;
    sc_out< sc_uint<C_M_AXI_IN2_ID_WIDTH> > m_axi_IN2_ARID;
    sc_out< sc_lv<8> > m_axi_IN2_ARLEN;
    sc_out< sc_lv<3> > m_axi_IN2_ARSIZE;
    sc_out< sc_lv<2> > m_axi_IN2_ARBURST;
    sc_out< sc_lv<2> > m_axi_IN2_ARLOCK;
    sc_out< sc_lv<4> > m_axi_IN2_ARCACHE;
    sc_out< sc_lv<3> > m_axi_IN2_ARPROT;
    sc_out< sc_lv<4> > m_axi_IN2_ARQOS;
    sc_out< sc_lv<4> > m_axi_IN2_ARREGION;
    sc_out< sc_uint<C_M_AXI_IN2_ARUSER_WIDTH> > m_axi_IN2_ARUSER;
    sc_in< sc_logic > m_axi_IN2_RVALID;
    sc_out< sc_logic > m_axi_IN2_RREADY;
    sc_in< sc_uint<C_M_AXI_IN2_DATA_WIDTH> > m_axi_IN2_RDATA;
    sc_in< sc_logic > m_axi_IN2_RLAST;
    sc_in< sc_uint<C_M_AXI_IN2_ID_WIDTH> > m_axi_IN2_RID;
    sc_in< sc_uint<C_M_AXI_IN2_RUSER_WIDTH> > m_axi_IN2_RUSER;
    sc_in< sc_lv<2> > m_axi_IN2_RRESP;
    sc_in< sc_logic > m_axi_IN2_BVALID;
    sc_out< sc_logic > m_axi_IN2_BREADY;
    sc_in< sc_lv<2> > m_axi_IN2_BRESP;
    sc_in< sc_uint<C_M_AXI_IN2_ID_WIDTH> > m_axi_IN2_BID;
    sc_in< sc_uint<C_M_AXI_IN2_BUSER_WIDTH> > m_axi_IN2_BUSER;
    sc_out< sc_logic > m_axi_IN3_AWVALID;
    sc_in< sc_logic > m_axi_IN3_AWREADY;
    sc_out< sc_uint<C_M_AXI_IN3_ADDR_WIDTH> > m_axi_IN3_AWADDR;
    sc_out< sc_uint<C_M_AXI_IN3_ID_WIDTH> > m_axi_IN3_AWID;
    sc_out< sc_lv<8> > m_axi_IN3_AWLEN;
    sc_out< sc_lv<3> > m_axi_IN3_AWSIZE;
    sc_out< sc_lv<2> > m_axi_IN3_AWBURST;
    sc_out< sc_lv<2> > m_axi_IN3_AWLOCK;
    sc_out< sc_lv<4> > m_axi_IN3_AWCACHE;
    sc_out< sc_lv<3> > m_axi_IN3_AWPROT;
    sc_out< sc_lv<4> > m_axi_IN3_AWQOS;
    sc_out< sc_lv<4> > m_axi_IN3_AWREGION;
    sc_out< sc_uint<C_M_AXI_IN3_AWUSER_WIDTH> > m_axi_IN3_AWUSER;
    sc_out< sc_logic > m_axi_IN3_WVALID;
    sc_in< sc_logic > m_axi_IN3_WREADY;
    sc_out< sc_uint<C_M_AXI_IN3_DATA_WIDTH> > m_axi_IN3_WDATA;
    sc_out< sc_uint<C_M_AXI_IN3_DATA_WIDTH/8> > m_axi_IN3_WSTRB;
    sc_out< sc_logic > m_axi_IN3_WLAST;
    sc_out< sc_uint<C_M_AXI_IN3_ID_WIDTH> > m_axi_IN3_WID;
    sc_out< sc_uint<C_M_AXI_IN3_WUSER_WIDTH> > m_axi_IN3_WUSER;
    sc_out< sc_logic > m_axi_IN3_ARVALID;
    sc_in< sc_logic > m_axi_IN3_ARREADY;
    sc_out< sc_uint<C_M_AXI_IN3_ADDR_WIDTH> > m_axi_IN3_ARADDR;
    sc_out< sc_uint<C_M_AXI_IN3_ID_WIDTH> > m_axi_IN3_ARID;
    sc_out< sc_lv<8> > m_axi_IN3_ARLEN;
    sc_out< sc_lv<3> > m_axi_IN3_ARSIZE;
    sc_out< sc_lv<2> > m_axi_IN3_ARBURST;
    sc_out< sc_lv<2> > m_axi_IN3_ARLOCK;
    sc_out< sc_lv<4> > m_axi_IN3_ARCACHE;
    sc_out< sc_lv<3> > m_axi_IN3_ARPROT;
    sc_out< sc_lv<4> > m_axi_IN3_ARQOS;
    sc_out< sc_lv<4> > m_axi_IN3_ARREGION;
    sc_out< sc_uint<C_M_AXI_IN3_ARUSER_WIDTH> > m_axi_IN3_ARUSER;
    sc_in< sc_logic > m_axi_IN3_RVALID;
    sc_out< sc_logic > m_axi_IN3_RREADY;
    sc_in< sc_uint<C_M_AXI_IN3_DATA_WIDTH> > m_axi_IN3_RDATA;
    sc_in< sc_logic > m_axi_IN3_RLAST;
    sc_in< sc_uint<C_M_AXI_IN3_ID_WIDTH> > m_axi_IN3_RID;
    sc_in< sc_uint<C_M_AXI_IN3_RUSER_WIDTH> > m_axi_IN3_RUSER;
    sc_in< sc_lv<2> > m_axi_IN3_RRESP;
    sc_in< sc_logic > m_axi_IN3_BVALID;
    sc_out< sc_logic > m_axi_IN3_BREADY;
    sc_in< sc_lv<2> > m_axi_IN3_BRESP;
    sc_in< sc_uint<C_M_AXI_IN3_ID_WIDTH> > m_axi_IN3_BID;
    sc_in< sc_uint<C_M_AXI_IN3_BUSER_WIDTH> > m_axi_IN3_BUSER;
    sc_out< sc_logic > m_axi_W_AWVALID;
    sc_in< sc_logic > m_axi_W_AWREADY;
    sc_out< sc_uint<C_M_AXI_W_ADDR_WIDTH> > m_axi_W_AWADDR;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_W_AWID;
    sc_out< sc_lv<8> > m_axi_W_AWLEN;
    sc_out< sc_lv<3> > m_axi_W_AWSIZE;
    sc_out< sc_lv<2> > m_axi_W_AWBURST;
    sc_out< sc_lv<2> > m_axi_W_AWLOCK;
    sc_out< sc_lv<4> > m_axi_W_AWCACHE;
    sc_out< sc_lv<3> > m_axi_W_AWPROT;
    sc_out< sc_lv<4> > m_axi_W_AWQOS;
    sc_out< sc_lv<4> > m_axi_W_AWREGION;
    sc_out< sc_uint<C_M_AXI_W_AWUSER_WIDTH> > m_axi_W_AWUSER;
    sc_out< sc_logic > m_axi_W_WVALID;
    sc_in< sc_logic > m_axi_W_WREADY;
    sc_out< sc_uint<C_M_AXI_W_DATA_WIDTH> > m_axi_W_WDATA;
    sc_out< sc_uint<C_M_AXI_W_DATA_WIDTH/8> > m_axi_W_WSTRB;
    sc_out< sc_logic > m_axi_W_WLAST;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_W_WID;
    sc_out< sc_uint<C_M_AXI_W_WUSER_WIDTH> > m_axi_W_WUSER;
    sc_out< sc_logic > m_axi_W_ARVALID;
    sc_in< sc_logic > m_axi_W_ARREADY;
    sc_out< sc_uint<C_M_AXI_W_ADDR_WIDTH> > m_axi_W_ARADDR;
    sc_out< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_W_ARID;
    sc_out< sc_lv<8> > m_axi_W_ARLEN;
    sc_out< sc_lv<3> > m_axi_W_ARSIZE;
    sc_out< sc_lv<2> > m_axi_W_ARBURST;
    sc_out< sc_lv<2> > m_axi_W_ARLOCK;
    sc_out< sc_lv<4> > m_axi_W_ARCACHE;
    sc_out< sc_lv<3> > m_axi_W_ARPROT;
    sc_out< sc_lv<4> > m_axi_W_ARQOS;
    sc_out< sc_lv<4> > m_axi_W_ARREGION;
    sc_out< sc_uint<C_M_AXI_W_ARUSER_WIDTH> > m_axi_W_ARUSER;
    sc_in< sc_logic > m_axi_W_RVALID;
    sc_out< sc_logic > m_axi_W_RREADY;
    sc_in< sc_uint<C_M_AXI_W_DATA_WIDTH> > m_axi_W_RDATA;
    sc_in< sc_logic > m_axi_W_RLAST;
    sc_in< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_W_RID;
    sc_in< sc_uint<C_M_AXI_W_RUSER_WIDTH> > m_axi_W_RUSER;
    sc_in< sc_lv<2> > m_axi_W_RRESP;
    sc_in< sc_logic > m_axi_W_BVALID;
    sc_out< sc_logic > m_axi_W_BREADY;
    sc_in< sc_lv<2> > m_axi_W_BRESP;
    sc_in< sc_uint<C_M_AXI_W_ID_WIDTH> > m_axi_W_BID;
    sc_in< sc_uint<C_M_AXI_W_BUSER_WIDTH> > m_axi_W_BUSER;
    sc_out< sc_logic > m_axi_OUT_r_AWVALID;
    sc_in< sc_logic > m_axi_OUT_r_AWREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_AWADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_AWID;
    sc_out< sc_lv<8> > m_axi_OUT_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_AWREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_AWUSER_WIDTH> > m_axi_OUT_r_AWUSER;
    sc_out< sc_logic > m_axi_OUT_r_WVALID;
    sc_in< sc_logic > m_axi_OUT_r_WREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_WDATA;
    sc_out< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH/8> > m_axi_OUT_r_WSTRB;
    sc_out< sc_logic > m_axi_OUT_r_WLAST;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_WID;
    sc_out< sc_uint<C_M_AXI_OUT_R_WUSER_WIDTH> > m_axi_OUT_r_WUSER;
    sc_out< sc_logic > m_axi_OUT_r_ARVALID;
    sc_in< sc_logic > m_axi_OUT_r_ARREADY;
    sc_out< sc_uint<C_M_AXI_OUT_R_ADDR_WIDTH> > m_axi_OUT_r_ARADDR;
    sc_out< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_ARID;
    sc_out< sc_lv<8> > m_axi_OUT_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_OUT_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_OUT_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_OUT_r_ARREGION;
    sc_out< sc_uint<C_M_AXI_OUT_R_ARUSER_WIDTH> > m_axi_OUT_r_ARUSER;
    sc_in< sc_logic > m_axi_OUT_r_RVALID;
    sc_out< sc_logic > m_axi_OUT_r_RREADY;
    sc_in< sc_uint<C_M_AXI_OUT_R_DATA_WIDTH> > m_axi_OUT_r_RDATA;
    sc_in< sc_logic > m_axi_OUT_r_RLAST;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_RID;
    sc_in< sc_uint<C_M_AXI_OUT_R_RUSER_WIDTH> > m_axi_OUT_r_RUSER;
    sc_in< sc_lv<2> > m_axi_OUT_r_RRESP;
    sc_in< sc_logic > m_axi_OUT_r_BVALID;
    sc_out< sc_logic > m_axi_OUT_r_BREADY;
    sc_in< sc_lv<2> > m_axi_OUT_r_BRESP;
    sc_in< sc_uint<C_M_AXI_OUT_R_ID_WIDTH> > m_axi_OUT_r_BID;
    sc_in< sc_uint<C_M_AXI_OUT_R_BUSER_WIDTH> > m_axi_OUT_r_BUSER;
    sc_in< sc_logic > s_axi_CTRL_AWVALID;
    sc_out< sc_logic > s_axi_CTRL_AWREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_AWADDR;
    sc_in< sc_logic > s_axi_CTRL_WVALID;
    sc_out< sc_logic > s_axi_CTRL_WREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_WDATA;
    sc_in< sc_uint<C_S_AXI_CTRL_DATA_WIDTH/8> > s_axi_CTRL_WSTRB;
    sc_in< sc_logic > s_axi_CTRL_ARVALID;
    sc_out< sc_logic > s_axi_CTRL_ARREADY;
    sc_in< sc_uint<C_S_AXI_CTRL_ADDR_WIDTH> > s_axi_CTRL_ARADDR;
    sc_out< sc_logic > s_axi_CTRL_RVALID;
    sc_in< sc_logic > s_axi_CTRL_RREADY;
    sc_out< sc_uint<C_S_AXI_CTRL_DATA_WIDTH> > s_axi_CTRL_RDATA;
    sc_out< sc_lv<2> > s_axi_CTRL_RRESP;
    sc_out< sc_logic > s_axi_CTRL_BVALID;
    sc_in< sc_logic > s_axi_CTRL_BREADY;
    sc_out< sc_lv<2> > s_axi_CTRL_BRESP;
    sc_out< sc_logic > interrupt;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const2;
    sc_signal< sc_lv<1> > ap_var_for_const3;
    sc_signal< sc_lv<16> > ap_var_for_const7;
    sc_signal< sc_lv<3> > ap_var_for_const4;
    sc_signal< sc_lv<2> > ap_var_for_const5;
    sc_signal< sc_lv<4> > ap_var_for_const6;
    sc_signal< sc_lv<64> > ap_var_for_const8;


    // Module declarations
    conv(sc_module_name name);
    SC_HAS_PROCESS(conv);

    ~conv();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv_CTRL_s_axi<C_S_AXI_CTRL_ADDR_WIDTH,C_S_AXI_CTRL_DATA_WIDTH>* conv_CTRL_s_axi_U;
    conv_IN1_m_axi<0,16,32,5,16,16,64,16,C_M_AXI_IN1_ID_WIDTH,C_M_AXI_IN1_ADDR_WIDTH,C_M_AXI_IN1_DATA_WIDTH,C_M_AXI_IN1_AWUSER_WIDTH,C_M_AXI_IN1_ARUSER_WIDTH,C_M_AXI_IN1_WUSER_WIDTH,C_M_AXI_IN1_RUSER_WIDTH,C_M_AXI_IN1_BUSER_WIDTH,C_M_AXI_IN1_USER_VALUE,C_M_AXI_IN1_PROT_VALUE,C_M_AXI_IN1_CACHE_VALUE>* conv_IN1_m_axi_U;
    conv_IN2_m_axi<0,16,32,5,16,16,64,16,C_M_AXI_IN2_ID_WIDTH,C_M_AXI_IN2_ADDR_WIDTH,C_M_AXI_IN2_DATA_WIDTH,C_M_AXI_IN2_AWUSER_WIDTH,C_M_AXI_IN2_ARUSER_WIDTH,C_M_AXI_IN2_WUSER_WIDTH,C_M_AXI_IN2_RUSER_WIDTH,C_M_AXI_IN2_BUSER_WIDTH,C_M_AXI_IN2_USER_VALUE,C_M_AXI_IN2_PROT_VALUE,C_M_AXI_IN2_CACHE_VALUE>* conv_IN2_m_axi_U;
    conv_IN3_m_axi<0,16,32,5,16,16,64,16,C_M_AXI_IN3_ID_WIDTH,C_M_AXI_IN3_ADDR_WIDTH,C_M_AXI_IN3_DATA_WIDTH,C_M_AXI_IN3_AWUSER_WIDTH,C_M_AXI_IN3_ARUSER_WIDTH,C_M_AXI_IN3_WUSER_WIDTH,C_M_AXI_IN3_RUSER_WIDTH,C_M_AXI_IN3_BUSER_WIDTH,C_M_AXI_IN3_USER_VALUE,C_M_AXI_IN3_PROT_VALUE,C_M_AXI_IN3_CACHE_VALUE>* conv_IN3_m_axi_U;
    conv_W_m_axi<0,16,32,5,16,16,16,16,C_M_AXI_W_ID_WIDTH,C_M_AXI_W_ADDR_WIDTH,C_M_AXI_W_DATA_WIDTH,C_M_AXI_W_AWUSER_WIDTH,C_M_AXI_W_ARUSER_WIDTH,C_M_AXI_W_WUSER_WIDTH,C_M_AXI_W_RUSER_WIDTH,C_M_AXI_W_BUSER_WIDTH,C_M_AXI_W_USER_VALUE,C_M_AXI_W_PROT_VALUE,C_M_AXI_W_CACHE_VALUE>* conv_W_m_axi_U;
    conv_OUT_r_m_axi<0,64,32,5,16,16,64,16,C_M_AXI_OUT_R_ID_WIDTH,C_M_AXI_OUT_R_ADDR_WIDTH,C_M_AXI_OUT_R_DATA_WIDTH,C_M_AXI_OUT_R_AWUSER_WIDTH,C_M_AXI_OUT_R_ARUSER_WIDTH,C_M_AXI_OUT_R_WUSER_WIDTH,C_M_AXI_OUT_R_RUSER_WIDTH,C_M_AXI_OUT_R_BUSER_WIDTH,C_M_AXI_OUT_R_USER_VALUE,C_M_AXI_OUT_R_PROT_VALUE,C_M_AXI_OUT_R_CACHE_VALUE>* conv_OUT_r_m_axi_U;
    conv_fm_in_buff1_ibs* fm_in_buff1_0_V_U;
    conv_fm_in_buff1_ibs* fm_in_buff1_1_V_U;
    conv_fm_in_buff1_ibs* fm_in_buff1_2_V_U;
    conv_fm_in_buff1_ibs* fm_in_buff2_0_V_U;
    conv_fm_in_buff1_ibs* fm_in_buff2_1_V_U;
    conv_fm_in_buff1_ibs* fm_in_buff2_2_V_U;
    compute_output* grp_compute_output_fu_659;
    load_input* grp_load_input_fu_740;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > in1_V;
    sc_signal< sc_lv<32> > in2_V;
    sc_signal< sc_lv<32> > in3_V;
    sc_signal< sc_lv<32> > weight_V;
    sc_signal< sc_lv<32> > bias_V;
    sc_signal< sc_lv<32> > out_V;
    sc_signal< sc_logic > W_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > W_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > IN1_AWREADY;
    sc_signal< sc_logic > IN1_WREADY;
    sc_signal< sc_logic > IN1_ARVALID;
    sc_signal< sc_logic > IN1_ARREADY;
    sc_signal< sc_logic > IN1_RVALID;
    sc_signal< sc_logic > IN1_RREADY;
    sc_signal< sc_lv<16> > IN1_RDATA;
    sc_signal< sc_logic > IN1_RLAST;
    sc_signal< sc_lv<1> > IN1_RID;
    sc_signal< sc_lv<1> > IN1_RUSER;
    sc_signal< sc_lv<2> > IN1_RRESP;
    sc_signal< sc_logic > IN1_BVALID;
    sc_signal< sc_lv<2> > IN1_BRESP;
    sc_signal< sc_lv<1> > IN1_BID;
    sc_signal< sc_lv<1> > IN1_BUSER;
    sc_signal< sc_logic > IN2_AWREADY;
    sc_signal< sc_logic > IN2_WREADY;
    sc_signal< sc_logic > IN2_ARVALID;
    sc_signal< sc_logic > IN2_ARREADY;
    sc_signal< sc_logic > IN2_RVALID;
    sc_signal< sc_logic > IN2_RREADY;
    sc_signal< sc_lv<16> > IN2_RDATA;
    sc_signal< sc_logic > IN2_RLAST;
    sc_signal< sc_lv<1> > IN2_RID;
    sc_signal< sc_lv<1> > IN2_RUSER;
    sc_signal< sc_lv<2> > IN2_RRESP;
    sc_signal< sc_logic > IN2_BVALID;
    sc_signal< sc_lv<2> > IN2_BRESP;
    sc_signal< sc_lv<1> > IN2_BID;
    sc_signal< sc_lv<1> > IN2_BUSER;
    sc_signal< sc_logic > IN3_AWREADY;
    sc_signal< sc_logic > IN3_WREADY;
    sc_signal< sc_logic > IN3_ARVALID;
    sc_signal< sc_logic > IN3_ARREADY;
    sc_signal< sc_logic > IN3_RVALID;
    sc_signal< sc_logic > IN3_RREADY;
    sc_signal< sc_lv<16> > IN3_RDATA;
    sc_signal< sc_logic > IN3_RLAST;
    sc_signal< sc_lv<1> > IN3_RID;
    sc_signal< sc_lv<1> > IN3_RUSER;
    sc_signal< sc_lv<2> > IN3_RRESP;
    sc_signal< sc_logic > IN3_BVALID;
    sc_signal< sc_lv<2> > IN3_BRESP;
    sc_signal< sc_lv<1> > IN3_BID;
    sc_signal< sc_lv<1> > IN3_BUSER;
    sc_signal< sc_logic > W_AWREADY;
    sc_signal< sc_logic > W_WREADY;
    sc_signal< sc_logic > W_ARVALID;
    sc_signal< sc_logic > W_ARREADY;
    sc_signal< sc_lv<32> > W_ARADDR;
    sc_signal< sc_lv<1> > W_ARID;
    sc_signal< sc_lv<32> > W_ARLEN;
    sc_signal< sc_lv<3> > W_ARSIZE;
    sc_signal< sc_lv<2> > W_ARBURST;
    sc_signal< sc_lv<2> > W_ARLOCK;
    sc_signal< sc_lv<4> > W_ARCACHE;
    sc_signal< sc_lv<3> > W_ARPROT;
    sc_signal< sc_lv<4> > W_ARQOS;
    sc_signal< sc_lv<4> > W_ARREGION;
    sc_signal< sc_lv<1> > W_ARUSER;
    sc_signal< sc_logic > W_RVALID;
    sc_signal< sc_logic > W_RREADY;
    sc_signal< sc_lv<16> > W_RDATA;
    sc_signal< sc_logic > W_RLAST;
    sc_signal< sc_lv<1> > W_RID;
    sc_signal< sc_lv<1> > W_RUSER;
    sc_signal< sc_lv<2> > W_RRESP;
    sc_signal< sc_logic > W_BVALID;
    sc_signal< sc_lv<2> > W_BRESP;
    sc_signal< sc_lv<1> > W_BID;
    sc_signal< sc_lv<1> > W_BUSER;
    sc_signal< sc_logic > OUT_r_AWVALID;
    sc_signal< sc_logic > OUT_r_AWREADY;
    sc_signal< sc_logic > OUT_r_WVALID;
    sc_signal< sc_logic > OUT_r_WREADY;
    sc_signal< sc_logic > OUT_r_ARREADY;
    sc_signal< sc_logic > OUT_r_RVALID;
    sc_signal< sc_lv<64> > OUT_r_RDATA;
    sc_signal< sc_logic > OUT_r_RLAST;
    sc_signal< sc_lv<1> > OUT_r_RID;
    sc_signal< sc_lv<1> > OUT_r_RUSER;
    sc_signal< sc_lv<2> > OUT_r_RRESP;
    sc_signal< sc_logic > OUT_r_BVALID;
    sc_signal< sc_logic > OUT_r_BREADY;
    sc_signal< sc_lv<2> > OUT_r_BRESP;
    sc_signal< sc_lv<1> > OUT_r_BID;
    sc_signal< sc_lv<1> > OUT_r_BUSER;
    sc_signal< sc_lv<7> > phi_ln149_reg_598;
    sc_signal< sc_lv<16> > reg_1016;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<1> > icmp_ln174_fu_1791_p2;
    sc_signal< sc_lv<1> > icmp_ln174_1_fu_1802_p2;
    sc_signal< sc_lv<16> > reg_1021;
    sc_signal< sc_lv<16> > reg_1026;
    sc_signal< sc_lv<16> > reg_1031;
    sc_signal< sc_lv<16> > reg_1036;
    sc_signal< sc_lv<16> > reg_1041;
    sc_signal< sc_lv<16> > reg_1046;
    sc_signal< sc_lv<16> > reg_1051;
    sc_signal< sc_lv<16> > reg_1056;
    sc_signal< sc_lv<16> > reg_1061;
    sc_signal< sc_lv<16> > reg_1066;
    sc_signal< sc_lv<16> > reg_1071;
    sc_signal< sc_lv<16> > reg_1076;
    sc_signal< sc_lv<16> > reg_1081;
    sc_signal< sc_lv<16> > reg_1086;
    sc_signal< sc_lv<16> > reg_1091;
    sc_signal< sc_lv<16> > reg_1096;
    sc_signal< sc_lv<16> > reg_1101;
    sc_signal< sc_lv<16> > reg_1106;
    sc_signal< sc_lv<16> > reg_1111;
    sc_signal< sc_lv<16> > reg_1116;
    sc_signal< sc_lv<16> > reg_1121;
    sc_signal< sc_lv<16> > reg_1126;
    sc_signal< sc_lv<16> > reg_1131;
    sc_signal< sc_lv<16> > reg_1136;
    sc_signal< sc_lv<16> > reg_1141;
    sc_signal< sc_lv<16> > reg_1146;
    sc_signal< sc_lv<16> > reg_1151;
    sc_signal< sc_lv<16> > reg_1156;
    sc_signal< sc_lv<16> > reg_1161;
    sc_signal< sc_lv<16> > reg_1166;
    sc_signal< sc_lv<16> > reg_1171;
    sc_signal< sc_lv<16> > reg_1176;
    sc_signal< sc_lv<16> > reg_1181;
    sc_signal< sc_lv<16> > reg_1186;
    sc_signal< sc_lv<16> > reg_1191;
    sc_signal< sc_lv<16> > reg_1196;
    sc_signal< sc_lv<16> > reg_1201;
    sc_signal< sc_lv<16> > reg_1206;
    sc_signal< sc_lv<16> > reg_1211;
    sc_signal< sc_lv<16> > reg_1216;
    sc_signal< sc_lv<16> > reg_1221;
    sc_signal< sc_lv<16> > reg_1226;
    sc_signal< sc_lv<16> > reg_1231;
    sc_signal< sc_lv<16> > reg_1236;
    sc_signal< sc_lv<16> > reg_1241;
    sc_signal< sc_lv<16> > reg_1246;
    sc_signal< sc_lv<16> > reg_1251;
    sc_signal< sc_lv<16> > reg_1256;
    sc_signal< sc_lv<16> > reg_1261;
    sc_signal< sc_lv<16> > reg_1266;
    sc_signal< sc_lv<16> > reg_1271;
    sc_signal< sc_lv<16> > reg_1276;
    sc_signal< sc_lv<16> > reg_1281;
    sc_signal< sc_lv<16> > reg_1286;
    sc_signal< sc_lv<16> > reg_1291;
    sc_signal< sc_lv<16> > reg_1296;
    sc_signal< sc_lv<16> > reg_1301;
    sc_signal< sc_lv<16> > reg_1306;
    sc_signal< sc_lv<16> > reg_1311;
    sc_signal< sc_lv<16> > reg_1316;
    sc_signal< sc_lv<16> > reg_1321;
    sc_signal< sc_lv<16> > reg_1326;
    sc_signal< sc_lv<16> > reg_1331;
    sc_signal< sc_lv<29> > out_V1_reg_2192;
    sc_signal< sc_lv<32> > W_addr_reg_2197;
    sc_signal< sc_lv<31> > weight_V7_reg_2203;
    sc_signal< sc_lv<31> > in3_V5_reg_2208;
    sc_signal< sc_lv<31> > in2_V3_reg_2213;
    sc_signal< sc_lv<31> > in1_V1_reg_2218;
    sc_signal< sc_lv<1> > icmp_ln149_fu_1406_p2;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > add_ln149_fu_1412_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > trunc_ln149_fu_1418_p1;
    sc_signal< sc_lv<6> > trunc_ln149_reg_2232;
    sc_signal< sc_lv<32> > row_fu_1760_p3;
    sc_signal< sc_lv<32> > row_reg_2236;
    sc_signal< sc_lv<32> > col_fu_1768_p3;
    sc_signal< sc_lv<32> > col_reg_2243;
    sc_signal< sc_lv<16> > trunc_ln162_fu_1776_p1;
    sc_signal< sc_lv<16> > trunc_ln162_reg_2250;
    sc_signal< sc_lv<16> > trunc_ln162_1_fu_1781_p1;
    sc_signal< sc_lv<16> > trunc_ln162_1_reg_2255;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state9;
    sc_signal< sc_lv<12> > fm_in_buff1_0_V_address0;
    sc_signal< sc_logic > fm_in_buff1_0_V_ce0;
    sc_signal< sc_logic > fm_in_buff1_0_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff1_0_V_q0;
    sc_signal< sc_lv<12> > fm_in_buff1_1_V_address0;
    sc_signal< sc_logic > fm_in_buff1_1_V_ce0;
    sc_signal< sc_logic > fm_in_buff1_1_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff1_1_V_q0;
    sc_signal< sc_lv<12> > fm_in_buff1_2_V_address0;
    sc_signal< sc_logic > fm_in_buff1_2_V_ce0;
    sc_signal< sc_logic > fm_in_buff1_2_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff1_2_V_q0;
    sc_signal< sc_lv<12> > fm_in_buff2_0_V_address0;
    sc_signal< sc_logic > fm_in_buff2_0_V_ce0;
    sc_signal< sc_logic > fm_in_buff2_0_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff2_0_V_q0;
    sc_signal< sc_lv<12> > fm_in_buff2_1_V_address0;
    sc_signal< sc_logic > fm_in_buff2_1_V_ce0;
    sc_signal< sc_logic > fm_in_buff2_1_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff2_1_V_q0;
    sc_signal< sc_lv<12> > fm_in_buff2_2_V_address0;
    sc_signal< sc_logic > fm_in_buff2_2_V_ce0;
    sc_signal< sc_logic > fm_in_buff2_2_V_we0;
    sc_signal< sc_lv<16> > fm_in_buff2_2_V_q0;
    sc_signal< sc_logic > grp_compute_output_fu_659_ap_start;
    sc_signal< sc_logic > grp_compute_output_fu_659_ap_done;
    sc_signal< sc_logic > grp_compute_output_fu_659_ap_idle;
    sc_signal< sc_logic > grp_compute_output_fu_659_ap_ready;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_AWVALID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_weight_V_AWADDR;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_AWID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_weight_V_AWLEN;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_weight_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_weight_V_AWBURST;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_weight_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_weight_V_AWPROT;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_AWQOS;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_AWREGION;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_AWUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_WVALID;
    sc_signal< sc_lv<16> > grp_compute_output_fu_659_m_axi_weight_V_WDATA;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_weight_V_WSTRB;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_WLAST;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_WID;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_WUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_ARVALID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_weight_V_ARADDR;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_ARID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_weight_V_ARLEN;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_weight_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_weight_V_ARBURST;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_weight_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_weight_V_ARPROT;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_ARQOS;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_weight_V_ARREGION;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_weight_V_ARUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_RREADY;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_weight_V_BREADY;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_AWVALID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_out_V_AWADDR;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_AWID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_out_V_AWLEN;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_out_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_out_V_AWBURST;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_out_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_out_V_AWPROT;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_AWQOS;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_AWREGION;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_AWUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_WVALID;
    sc_signal< sc_lv<64> > grp_compute_output_fu_659_m_axi_out_V_WDATA;
    sc_signal< sc_lv<8> > grp_compute_output_fu_659_m_axi_out_V_WSTRB;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_WLAST;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_WID;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_WUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_ARVALID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_out_V_ARADDR;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_ARID;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_m_axi_out_V_ARLEN;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_out_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_out_V_ARBURST;
    sc_signal< sc_lv<2> > grp_compute_output_fu_659_m_axi_out_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_compute_output_fu_659_m_axi_out_V_ARPROT;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_ARQOS;
    sc_signal< sc_lv<4> > grp_compute_output_fu_659_m_axi_out_V_ARREGION;
    sc_signal< sc_lv<1> > grp_compute_output_fu_659_m_axi_out_V_ARUSER;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_RREADY;
    sc_signal< sc_logic > grp_compute_output_fu_659_m_axi_out_V_BREADY;
    sc_signal< sc_lv<12> > grp_compute_output_fu_659_fm_in_buff_0_V_address0;
    sc_signal< sc_logic > grp_compute_output_fu_659_fm_in_buff_0_V_ce0;
    sc_signal< sc_lv<16> > grp_compute_output_fu_659_fm_in_buff_0_V_q0;
    sc_signal< sc_lv<12> > grp_compute_output_fu_659_fm_in_buff_1_V_address0;
    sc_signal< sc_logic > grp_compute_output_fu_659_fm_in_buff_1_V_ce0;
    sc_signal< sc_lv<16> > grp_compute_output_fu_659_fm_in_buff_1_V_q0;
    sc_signal< sc_lv<12> > grp_compute_output_fu_659_fm_in_buff_2_V_address0;
    sc_signal< sc_logic > grp_compute_output_fu_659_fm_in_buff_2_V_ce0;
    sc_signal< sc_lv<16> > grp_compute_output_fu_659_fm_in_buff_2_V_q0;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_row;
    sc_signal< sc_lv<32> > grp_compute_output_fu_659_col;
    sc_signal< sc_logic > grp_load_input_fu_740_ap_start;
    sc_signal< sc_logic > grp_load_input_fu_740_ap_done;
    sc_signal< sc_logic > grp_load_input_fu_740_ap_idle;
    sc_signal< sc_logic > grp_load_input_fu_740_ap_ready;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_AWVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in1_V_AWADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_AWID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in1_V_AWLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in1_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in1_V_AWBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in1_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in1_V_AWPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_AWQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_AWREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_AWUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_WVALID;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_m_axi_in1_V_WDATA;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in1_V_WSTRB;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_WLAST;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_WID;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_WUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_ARVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in1_V_ARADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_ARID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in1_V_ARLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in1_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in1_V_ARBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in1_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in1_V_ARPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_ARQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in1_V_ARREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in1_V_ARUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_RREADY;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in1_V_BREADY;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_AWVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in2_V_AWADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_AWID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in2_V_AWLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in2_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in2_V_AWBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in2_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in2_V_AWPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_AWQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_AWREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_AWUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_WVALID;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_m_axi_in2_V_WDATA;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in2_V_WSTRB;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_WLAST;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_WID;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_WUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_ARVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in2_V_ARADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_ARID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in2_V_ARLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in2_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in2_V_ARBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in2_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in2_V_ARPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_ARQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in2_V_ARREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in2_V_ARUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_RREADY;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in2_V_BREADY;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_AWVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in3_V_AWADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_AWID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in3_V_AWLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in3_V_AWSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in3_V_AWBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in3_V_AWLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_AWCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in3_V_AWPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_AWQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_AWREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_AWUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_WVALID;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_m_axi_in3_V_WDATA;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in3_V_WSTRB;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_WLAST;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_WID;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_WUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_ARVALID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in3_V_ARADDR;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_ARID;
    sc_signal< sc_lv<32> > grp_load_input_fu_740_m_axi_in3_V_ARLEN;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in3_V_ARSIZE;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in3_V_ARBURST;
    sc_signal< sc_lv<2> > grp_load_input_fu_740_m_axi_in3_V_ARLOCK;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_ARCACHE;
    sc_signal< sc_lv<3> > grp_load_input_fu_740_m_axi_in3_V_ARPROT;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_ARQOS;
    sc_signal< sc_lv<4> > grp_load_input_fu_740_m_axi_in3_V_ARREGION;
    sc_signal< sc_lv<1> > grp_load_input_fu_740_m_axi_in3_V_ARUSER;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_RREADY;
    sc_signal< sc_logic > grp_load_input_fu_740_m_axi_in3_V_BREADY;
    sc_signal< sc_lv<12> > grp_load_input_fu_740_fm_in_buff_0_V_address0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_0_V_ce0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_0_V_we0;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_fm_in_buff_0_V_d0;
    sc_signal< sc_lv<12> > grp_load_input_fu_740_fm_in_buff_1_V_address0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_1_V_ce0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_1_V_we0;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_fm_in_buff_1_V_d0;
    sc_signal< sc_lv<12> > grp_load_input_fu_740_fm_in_buff_2_V_address0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_2_V_ce0;
    sc_signal< sc_logic > grp_load_input_fu_740_fm_in_buff_2_V_we0;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_fm_in_buff_2_V_d0;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_fm_row;
    sc_signal< sc_lv<16> > grp_load_input_fu_740_fm_col;
    sc_signal< sc_lv<1> > ap_phi_mux_pp_0_phi_fu_613_p4;
    sc_signal< sc_lv<1> > pp_0_reg_609;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > ap_phi_mux_pp_1_phi_fu_650_p4;
    sc_signal< sc_lv<32> > row_assign_reg_620;
    sc_signal< sc_lv<32> > col_assign_reg_632;
    sc_signal< sc_lv<1> > pp_1_reg_644;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< bool > ap_block_state15_on_subcall_done;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< bool > ap_block_state14_on_subcall_done;
    sc_signal< sc_logic > grp_compute_output_fu_659_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > grp_load_input_fu_740_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<64> > empty_fu_1356_p1;
    sc_signal< sc_lv<16> > bias_buff_63_V_fu_270;
    sc_signal< sc_lv<16> > bias_buff_63_V_1_fu_274;
    sc_signal< sc_lv<16> > bias_buff_63_V_2_fu_278;
    sc_signal< sc_lv<16> > bias_buff_63_V_3_fu_282;
    sc_signal< sc_lv<16> > bias_buff_63_V_4_fu_286;
    sc_signal< sc_lv<16> > bias_buff_63_V_5_fu_290;
    sc_signal< sc_lv<16> > bias_buff_63_V_6_fu_294;
    sc_signal< sc_lv<16> > bias_buff_63_V_7_fu_298;
    sc_signal< sc_lv<16> > bias_buff_63_V_8_fu_302;
    sc_signal< sc_lv<16> > bias_buff_63_V_9_fu_306;
    sc_signal< sc_lv<16> > bias_buff_63_V_10_fu_310;
    sc_signal< sc_lv<16> > bias_buff_63_V_11_fu_314;
    sc_signal< sc_lv<16> > bias_buff_63_V_12_fu_318;
    sc_signal< sc_lv<16> > bias_buff_63_V_13_fu_322;
    sc_signal< sc_lv<16> > bias_buff_63_V_14_fu_326;
    sc_signal< sc_lv<16> > bias_buff_63_V_15_fu_330;
    sc_signal< sc_lv<16> > bias_buff_63_V_16_fu_334;
    sc_signal< sc_lv<16> > bias_buff_63_V_17_fu_338;
    sc_signal< sc_lv<16> > bias_buff_63_V_18_fu_342;
    sc_signal< sc_lv<16> > bias_buff_63_V_19_fu_346;
    sc_signal< sc_lv<16> > bias_buff_63_V_20_fu_350;
    sc_signal< sc_lv<16> > bias_buff_63_V_21_fu_354;
    sc_signal< sc_lv<16> > bias_buff_63_V_22_fu_358;
    sc_signal< sc_lv<16> > bias_buff_63_V_23_fu_362;
    sc_signal< sc_lv<16> > bias_buff_63_V_24_fu_366;
    sc_signal< sc_lv<16> > bias_buff_63_V_25_fu_370;
    sc_signal< sc_lv<16> > bias_buff_63_V_26_fu_374;
    sc_signal< sc_lv<16> > bias_buff_63_V_27_fu_378;
    sc_signal< sc_lv<16> > bias_buff_63_V_28_fu_382;
    sc_signal< sc_lv<16> > bias_buff_63_V_29_fu_386;
    sc_signal< sc_lv<16> > bias_buff_63_V_30_fu_390;
    sc_signal< sc_lv<16> > bias_buff_63_V_31_fu_394;
    sc_signal< sc_lv<16> > bias_buff_63_V_32_fu_398;
    sc_signal< sc_lv<16> > bias_buff_63_V_33_fu_402;
    sc_signal< sc_lv<16> > bias_buff_63_V_34_fu_406;
    sc_signal< sc_lv<16> > bias_buff_63_V_35_fu_410;
    sc_signal< sc_lv<16> > bias_buff_63_V_36_fu_414;
    sc_signal< sc_lv<16> > bias_buff_63_V_37_fu_418;
    sc_signal< sc_lv<16> > bias_buff_63_V_38_fu_422;
    sc_signal< sc_lv<16> > bias_buff_63_V_39_fu_426;
    sc_signal< sc_lv<16> > bias_buff_63_V_40_fu_430;
    sc_signal< sc_lv<16> > bias_buff_63_V_41_fu_434;
    sc_signal< sc_lv<16> > bias_buff_63_V_42_fu_438;
    sc_signal< sc_lv<16> > bias_buff_63_V_43_fu_442;
    sc_signal< sc_lv<16> > bias_buff_63_V_44_fu_446;
    sc_signal< sc_lv<16> > bias_buff_63_V_45_fu_450;
    sc_signal< sc_lv<16> > bias_buff_63_V_46_fu_454;
    sc_signal< sc_lv<16> > bias_buff_63_V_47_fu_458;
    sc_signal< sc_lv<16> > bias_buff_63_V_48_fu_462;
    sc_signal< sc_lv<16> > bias_buff_63_V_49_fu_466;
    sc_signal< sc_lv<16> > bias_buff_63_V_50_fu_470;
    sc_signal< sc_lv<16> > bias_buff_63_V_51_fu_474;
    sc_signal< sc_lv<16> > bias_buff_63_V_52_fu_478;
    sc_signal< sc_lv<16> > bias_buff_63_V_53_fu_482;
    sc_signal< sc_lv<16> > bias_buff_63_V_54_fu_486;
    sc_signal< sc_lv<16> > bias_buff_63_V_55_fu_490;
    sc_signal< sc_lv<16> > bias_buff_63_V_56_fu_494;
    sc_signal< sc_lv<16> > bias_buff_63_V_57_fu_498;
    sc_signal< sc_lv<16> > bias_buff_63_V_58_fu_502;
    sc_signal< sc_lv<16> > bias_buff_63_V_59_fu_506;
    sc_signal< sc_lv<16> > bias_buff_63_V_60_fu_510;
    sc_signal< sc_lv<16> > bias_buff_63_V_61_fu_514;
    sc_signal< sc_lv<16> > bias_buff_63_V_62_fu_518;
    sc_signal< sc_lv<16> > bias_buff_63_V_63_fu_522;
    sc_signal< sc_lv<31> > bias_V9_fu_1346_p4;
    sc_signal< sc_lv<32> > add_ln75_fu_1742_p2;
    sc_signal< sc_lv<1> > icmp_ln75_fu_1748_p2;
    sc_signal< sc_lv<32> > add_ln76_fu_1754_p2;
    sc_signal< sc_lv<32> > add_ln174_fu_1786_p2;
    sc_signal< sc_lv<32> > add_ln174_1_fu_1797_p2;
    sc_signal< bool > ap_block_state17_on_subcall_done;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_pp0_stage0;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<16> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_IN1_USER_VALUE;
    static const int C_M_AXI_IN1_PROT_VALUE;
    static const int C_M_AXI_IN1_CACHE_VALUE;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_IN2_USER_VALUE;
    static const int C_M_AXI_IN2_PROT_VALUE;
    static const int C_M_AXI_IN2_CACHE_VALUE;
    static const int C_M_AXI_IN3_USER_VALUE;
    static const int C_M_AXI_IN3_PROT_VALUE;
    static const int C_M_AXI_IN3_CACHE_VALUE;
    static const int C_M_AXI_W_USER_VALUE;
    static const int C_M_AXI_W_PROT_VALUE;
    static const int C_M_AXI_W_CACHE_VALUE;
    static const int C_M_AXI_OUT_R_USER_VALUE;
    static const int C_M_AXI_OUT_R_PROT_VALUE;
    static const int C_M_AXI_OUT_R_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<6> ap_const_lv6_3;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<6> ap_const_lv6_5;
    static const sc_lv<6> ap_const_lv6_6;
    static const sc_lv<6> ap_const_lv6_7;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<6> ap_const_lv6_9;
    static const sc_lv<6> ap_const_lv6_A;
    static const sc_lv<6> ap_const_lv6_B;
    static const sc_lv<6> ap_const_lv6_C;
    static const sc_lv<6> ap_const_lv6_D;
    static const sc_lv<6> ap_const_lv6_E;
    static const sc_lv<6> ap_const_lv6_F;
    static const sc_lv<6> ap_const_lv6_10;
    static const sc_lv<6> ap_const_lv6_11;
    static const sc_lv<6> ap_const_lv6_12;
    static const sc_lv<6> ap_const_lv6_13;
    static const sc_lv<6> ap_const_lv6_14;
    static const sc_lv<6> ap_const_lv6_15;
    static const sc_lv<6> ap_const_lv6_16;
    static const sc_lv<6> ap_const_lv6_17;
    static const sc_lv<6> ap_const_lv6_18;
    static const sc_lv<6> ap_const_lv6_19;
    static const sc_lv<6> ap_const_lv6_1A;
    static const sc_lv<6> ap_const_lv6_1B;
    static const sc_lv<6> ap_const_lv6_1C;
    static const sc_lv<6> ap_const_lv6_1D;
    static const sc_lv<6> ap_const_lv6_1E;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_21;
    static const sc_lv<6> ap_const_lv6_22;
    static const sc_lv<6> ap_const_lv6_23;
    static const sc_lv<6> ap_const_lv6_24;
    static const sc_lv<6> ap_const_lv6_25;
    static const sc_lv<6> ap_const_lv6_26;
    static const sc_lv<6> ap_const_lv6_27;
    static const sc_lv<6> ap_const_lv6_28;
    static const sc_lv<6> ap_const_lv6_29;
    static const sc_lv<6> ap_const_lv6_2A;
    static const sc_lv<6> ap_const_lv6_2B;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<6> ap_const_lv6_2D;
    static const sc_lv<6> ap_const_lv6_2E;
    static const sc_lv<6> ap_const_lv6_2F;
    static const sc_lv<6> ap_const_lv6_30;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_33;
    static const sc_lv<6> ap_const_lv6_34;
    static const sc_lv<6> ap_const_lv6_35;
    static const sc_lv<6> ap_const_lv6_36;
    static const sc_lv<6> ap_const_lv6_37;
    static const sc_lv<6> ap_const_lv6_38;
    static const sc_lv<6> ap_const_lv6_39;
    static const sc_lv<6> ap_const_lv6_3A;
    static const sc_lv<6> ap_const_lv6_3B;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<6> ap_const_lv6_3D;
    static const sc_lv<6> ap_const_lv6_3E;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_70;
    static const sc_lv<32> ap_const_lv32_6F;
    static const sc_lv<64> ap_const_lv64_0;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const7();
    void thread_ap_var_for_const4();
    void thread_ap_var_for_const5();
    void thread_ap_var_for_const6();
    void thread_ap_var_for_const8();
    void thread_ap_clk_no_reset_();
    void thread_IN1_ARVALID();
    void thread_IN1_RREADY();
    void thread_IN2_ARVALID();
    void thread_IN2_RREADY();
    void thread_IN3_ARVALID();
    void thread_IN3_RREADY();
    void thread_OUT_r_AWVALID();
    void thread_OUT_r_BREADY();
    void thread_OUT_r_WVALID();
    void thread_W_ARADDR();
    void thread_W_ARBURST();
    void thread_W_ARCACHE();
    void thread_W_ARID();
    void thread_W_ARLEN();
    void thread_W_ARLOCK();
    void thread_W_ARPROT();
    void thread_W_ARQOS();
    void thread_W_ARREGION();
    void thread_W_ARSIZE();
    void thread_W_ARUSER();
    void thread_W_ARVALID();
    void thread_W_RREADY();
    void thread_W_blk_n_AR();
    void thread_W_blk_n_R();
    void thread_add_ln149_fu_1412_p2();
    void thread_add_ln174_1_fu_1797_p2();
    void thread_add_ln174_fu_1786_p2();
    void thread_add_ln75_fu_1742_p2();
    void thread_add_ln76_fu_1754_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter1();
    void thread_ap_block_state14_on_subcall_done();
    void thread_ap_block_state15_on_subcall_done();
    void thread_ap_block_state17_on_subcall_done();
    void thread_ap_block_state9_pp0_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state9();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_pp_0_phi_fu_613_p4();
    void thread_ap_phi_mux_pp_1_phi_fu_650_p4();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_bias_V9_fu_1346_p4();
    void thread_col_fu_1768_p3();
    void thread_empty_fu_1356_p1();
    void thread_fm_in_buff1_0_V_address0();
    void thread_fm_in_buff1_0_V_ce0();
    void thread_fm_in_buff1_0_V_we0();
    void thread_fm_in_buff1_1_V_address0();
    void thread_fm_in_buff1_1_V_ce0();
    void thread_fm_in_buff1_1_V_we0();
    void thread_fm_in_buff1_2_V_address0();
    void thread_fm_in_buff1_2_V_ce0();
    void thread_fm_in_buff1_2_V_we0();
    void thread_fm_in_buff2_0_V_address0();
    void thread_fm_in_buff2_0_V_ce0();
    void thread_fm_in_buff2_0_V_we0();
    void thread_fm_in_buff2_1_V_address0();
    void thread_fm_in_buff2_1_V_ce0();
    void thread_fm_in_buff2_1_V_we0();
    void thread_fm_in_buff2_2_V_address0();
    void thread_fm_in_buff2_2_V_ce0();
    void thread_fm_in_buff2_2_V_we0();
    void thread_grp_compute_output_fu_659_ap_start();
    void thread_grp_compute_output_fu_659_col();
    void thread_grp_compute_output_fu_659_fm_in_buff_0_V_q0();
    void thread_grp_compute_output_fu_659_fm_in_buff_1_V_q0();
    void thread_grp_compute_output_fu_659_fm_in_buff_2_V_q0();
    void thread_grp_compute_output_fu_659_row();
    void thread_grp_load_input_fu_740_ap_start();
    void thread_grp_load_input_fu_740_fm_col();
    void thread_grp_load_input_fu_740_fm_row();
    void thread_icmp_ln149_fu_1406_p2();
    void thread_icmp_ln174_1_fu_1802_p2();
    void thread_icmp_ln174_fu_1791_p2();
    void thread_icmp_ln75_fu_1748_p2();
    void thread_row_fu_1760_p3();
    void thread_trunc_ln149_fu_1418_p1();
    void thread_trunc_ln162_1_fu_1781_p1();
    void thread_trunc_ln162_fu_1776_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
