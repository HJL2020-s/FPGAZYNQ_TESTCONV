// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="conv,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=54,HLS_SYN_DSP=51,HLS_SYN_FF=10926,HLS_SYN_LUT=19831,HLS_VERSION=2019_2}" *)

module conv (
        ap_clk,
        ap_rst_n,
        m_axi_IN1_AWVALID,
        m_axi_IN1_AWREADY,
        m_axi_IN1_AWADDR,
        m_axi_IN1_AWID,
        m_axi_IN1_AWLEN,
        m_axi_IN1_AWSIZE,
        m_axi_IN1_AWBURST,
        m_axi_IN1_AWLOCK,
        m_axi_IN1_AWCACHE,
        m_axi_IN1_AWPROT,
        m_axi_IN1_AWQOS,
        m_axi_IN1_AWREGION,
        m_axi_IN1_AWUSER,
        m_axi_IN1_WVALID,
        m_axi_IN1_WREADY,
        m_axi_IN1_WDATA,
        m_axi_IN1_WSTRB,
        m_axi_IN1_WLAST,
        m_axi_IN1_WID,
        m_axi_IN1_WUSER,
        m_axi_IN1_ARVALID,
        m_axi_IN1_ARREADY,
        m_axi_IN1_ARADDR,
        m_axi_IN1_ARID,
        m_axi_IN1_ARLEN,
        m_axi_IN1_ARSIZE,
        m_axi_IN1_ARBURST,
        m_axi_IN1_ARLOCK,
        m_axi_IN1_ARCACHE,
        m_axi_IN1_ARPROT,
        m_axi_IN1_ARQOS,
        m_axi_IN1_ARREGION,
        m_axi_IN1_ARUSER,
        m_axi_IN1_RVALID,
        m_axi_IN1_RREADY,
        m_axi_IN1_RDATA,
        m_axi_IN1_RLAST,
        m_axi_IN1_RID,
        m_axi_IN1_RUSER,
        m_axi_IN1_RRESP,
        m_axi_IN1_BVALID,
        m_axi_IN1_BREADY,
        m_axi_IN1_BRESP,
        m_axi_IN1_BID,
        m_axi_IN1_BUSER,
        m_axi_IN2_AWVALID,
        m_axi_IN2_AWREADY,
        m_axi_IN2_AWADDR,
        m_axi_IN2_AWID,
        m_axi_IN2_AWLEN,
        m_axi_IN2_AWSIZE,
        m_axi_IN2_AWBURST,
        m_axi_IN2_AWLOCK,
        m_axi_IN2_AWCACHE,
        m_axi_IN2_AWPROT,
        m_axi_IN2_AWQOS,
        m_axi_IN2_AWREGION,
        m_axi_IN2_AWUSER,
        m_axi_IN2_WVALID,
        m_axi_IN2_WREADY,
        m_axi_IN2_WDATA,
        m_axi_IN2_WSTRB,
        m_axi_IN2_WLAST,
        m_axi_IN2_WID,
        m_axi_IN2_WUSER,
        m_axi_IN2_ARVALID,
        m_axi_IN2_ARREADY,
        m_axi_IN2_ARADDR,
        m_axi_IN2_ARID,
        m_axi_IN2_ARLEN,
        m_axi_IN2_ARSIZE,
        m_axi_IN2_ARBURST,
        m_axi_IN2_ARLOCK,
        m_axi_IN2_ARCACHE,
        m_axi_IN2_ARPROT,
        m_axi_IN2_ARQOS,
        m_axi_IN2_ARREGION,
        m_axi_IN2_ARUSER,
        m_axi_IN2_RVALID,
        m_axi_IN2_RREADY,
        m_axi_IN2_RDATA,
        m_axi_IN2_RLAST,
        m_axi_IN2_RID,
        m_axi_IN2_RUSER,
        m_axi_IN2_RRESP,
        m_axi_IN2_BVALID,
        m_axi_IN2_BREADY,
        m_axi_IN2_BRESP,
        m_axi_IN2_BID,
        m_axi_IN2_BUSER,
        m_axi_IN3_AWVALID,
        m_axi_IN3_AWREADY,
        m_axi_IN3_AWADDR,
        m_axi_IN3_AWID,
        m_axi_IN3_AWLEN,
        m_axi_IN3_AWSIZE,
        m_axi_IN3_AWBURST,
        m_axi_IN3_AWLOCK,
        m_axi_IN3_AWCACHE,
        m_axi_IN3_AWPROT,
        m_axi_IN3_AWQOS,
        m_axi_IN3_AWREGION,
        m_axi_IN3_AWUSER,
        m_axi_IN3_WVALID,
        m_axi_IN3_WREADY,
        m_axi_IN3_WDATA,
        m_axi_IN3_WSTRB,
        m_axi_IN3_WLAST,
        m_axi_IN3_WID,
        m_axi_IN3_WUSER,
        m_axi_IN3_ARVALID,
        m_axi_IN3_ARREADY,
        m_axi_IN3_ARADDR,
        m_axi_IN3_ARID,
        m_axi_IN3_ARLEN,
        m_axi_IN3_ARSIZE,
        m_axi_IN3_ARBURST,
        m_axi_IN3_ARLOCK,
        m_axi_IN3_ARCACHE,
        m_axi_IN3_ARPROT,
        m_axi_IN3_ARQOS,
        m_axi_IN3_ARREGION,
        m_axi_IN3_ARUSER,
        m_axi_IN3_RVALID,
        m_axi_IN3_RREADY,
        m_axi_IN3_RDATA,
        m_axi_IN3_RLAST,
        m_axi_IN3_RID,
        m_axi_IN3_RUSER,
        m_axi_IN3_RRESP,
        m_axi_IN3_BVALID,
        m_axi_IN3_BREADY,
        m_axi_IN3_BRESP,
        m_axi_IN3_BID,
        m_axi_IN3_BUSER,
        m_axi_W_AWVALID,
        m_axi_W_AWREADY,
        m_axi_W_AWADDR,
        m_axi_W_AWID,
        m_axi_W_AWLEN,
        m_axi_W_AWSIZE,
        m_axi_W_AWBURST,
        m_axi_W_AWLOCK,
        m_axi_W_AWCACHE,
        m_axi_W_AWPROT,
        m_axi_W_AWQOS,
        m_axi_W_AWREGION,
        m_axi_W_AWUSER,
        m_axi_W_WVALID,
        m_axi_W_WREADY,
        m_axi_W_WDATA,
        m_axi_W_WSTRB,
        m_axi_W_WLAST,
        m_axi_W_WID,
        m_axi_W_WUSER,
        m_axi_W_ARVALID,
        m_axi_W_ARREADY,
        m_axi_W_ARADDR,
        m_axi_W_ARID,
        m_axi_W_ARLEN,
        m_axi_W_ARSIZE,
        m_axi_W_ARBURST,
        m_axi_W_ARLOCK,
        m_axi_W_ARCACHE,
        m_axi_W_ARPROT,
        m_axi_W_ARQOS,
        m_axi_W_ARREGION,
        m_axi_W_ARUSER,
        m_axi_W_RVALID,
        m_axi_W_RREADY,
        m_axi_W_RDATA,
        m_axi_W_RLAST,
        m_axi_W_RID,
        m_axi_W_RUSER,
        m_axi_W_RRESP,
        m_axi_W_BVALID,
        m_axi_W_BREADY,
        m_axi_W_BRESP,
        m_axi_W_BID,
        m_axi_W_BUSER,
        m_axi_OUT_r_AWVALID,
        m_axi_OUT_r_AWREADY,
        m_axi_OUT_r_AWADDR,
        m_axi_OUT_r_AWID,
        m_axi_OUT_r_AWLEN,
        m_axi_OUT_r_AWSIZE,
        m_axi_OUT_r_AWBURST,
        m_axi_OUT_r_AWLOCK,
        m_axi_OUT_r_AWCACHE,
        m_axi_OUT_r_AWPROT,
        m_axi_OUT_r_AWQOS,
        m_axi_OUT_r_AWREGION,
        m_axi_OUT_r_AWUSER,
        m_axi_OUT_r_WVALID,
        m_axi_OUT_r_WREADY,
        m_axi_OUT_r_WDATA,
        m_axi_OUT_r_WSTRB,
        m_axi_OUT_r_WLAST,
        m_axi_OUT_r_WID,
        m_axi_OUT_r_WUSER,
        m_axi_OUT_r_ARVALID,
        m_axi_OUT_r_ARREADY,
        m_axi_OUT_r_ARADDR,
        m_axi_OUT_r_ARID,
        m_axi_OUT_r_ARLEN,
        m_axi_OUT_r_ARSIZE,
        m_axi_OUT_r_ARBURST,
        m_axi_OUT_r_ARLOCK,
        m_axi_OUT_r_ARCACHE,
        m_axi_OUT_r_ARPROT,
        m_axi_OUT_r_ARQOS,
        m_axi_OUT_r_ARREGION,
        m_axi_OUT_r_ARUSER,
        m_axi_OUT_r_RVALID,
        m_axi_OUT_r_RREADY,
        m_axi_OUT_r_RDATA,
        m_axi_OUT_r_RLAST,
        m_axi_OUT_r_RID,
        m_axi_OUT_r_RUSER,
        m_axi_OUT_r_RRESP,
        m_axi_OUT_r_BVALID,
        m_axi_OUT_r_BREADY,
        m_axi_OUT_r_BRESP,
        m_axi_OUT_r_BID,
        m_axi_OUT_r_BUSER,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_pp0_stage0 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_state12 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_state14 = 16'd4096;
parameter    ap_ST_fsm_state15 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IN1_ID_WIDTH = 1;
parameter    C_M_AXI_IN1_ADDR_WIDTH = 32;
parameter    C_M_AXI_IN1_DATA_WIDTH = 32;
parameter    C_M_AXI_IN1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN1_USER_VALUE = 0;
parameter    C_M_AXI_IN1_PROT_VALUE = 0;
parameter    C_M_AXI_IN1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_IN2_ID_WIDTH = 1;
parameter    C_M_AXI_IN2_ADDR_WIDTH = 32;
parameter    C_M_AXI_IN2_DATA_WIDTH = 32;
parameter    C_M_AXI_IN2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN2_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN2_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN2_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN2_USER_VALUE = 0;
parameter    C_M_AXI_IN2_PROT_VALUE = 0;
parameter    C_M_AXI_IN2_CACHE_VALUE = 3;
parameter    C_M_AXI_IN3_ID_WIDTH = 1;
parameter    C_M_AXI_IN3_ADDR_WIDTH = 32;
parameter    C_M_AXI_IN3_DATA_WIDTH = 32;
parameter    C_M_AXI_IN3_AWUSER_WIDTH = 1;
parameter    C_M_AXI_IN3_ARUSER_WIDTH = 1;
parameter    C_M_AXI_IN3_WUSER_WIDTH = 1;
parameter    C_M_AXI_IN3_RUSER_WIDTH = 1;
parameter    C_M_AXI_IN3_BUSER_WIDTH = 1;
parameter    C_M_AXI_IN3_USER_VALUE = 0;
parameter    C_M_AXI_IN3_PROT_VALUE = 0;
parameter    C_M_AXI_IN3_CACHE_VALUE = 3;
parameter    C_M_AXI_W_ID_WIDTH = 1;
parameter    C_M_AXI_W_ADDR_WIDTH = 32;
parameter    C_M_AXI_W_DATA_WIDTH = 32;
parameter    C_M_AXI_W_AWUSER_WIDTH = 1;
parameter    C_M_AXI_W_ARUSER_WIDTH = 1;
parameter    C_M_AXI_W_WUSER_WIDTH = 1;
parameter    C_M_AXI_W_RUSER_WIDTH = 1;
parameter    C_M_AXI_W_BUSER_WIDTH = 1;
parameter    C_M_AXI_W_USER_VALUE = 0;
parameter    C_M_AXI_W_PROT_VALUE = 0;
parameter    C_M_AXI_W_CACHE_VALUE = 3;
parameter    C_M_AXI_OUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUT_R_DATA_WIDTH = 64;
parameter    C_M_AXI_OUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUT_R_CACHE_VALUE = 3;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IN1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IN2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_IN3_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_W_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUT_R_WSTRB_WIDTH = (64 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_IN1_AWVALID;
input   m_axi_IN1_AWREADY;
output  [C_M_AXI_IN1_ADDR_WIDTH - 1:0] m_axi_IN1_AWADDR;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_AWID;
output  [7:0] m_axi_IN1_AWLEN;
output  [2:0] m_axi_IN1_AWSIZE;
output  [1:0] m_axi_IN1_AWBURST;
output  [1:0] m_axi_IN1_AWLOCK;
output  [3:0] m_axi_IN1_AWCACHE;
output  [2:0] m_axi_IN1_AWPROT;
output  [3:0] m_axi_IN1_AWQOS;
output  [3:0] m_axi_IN1_AWREGION;
output  [C_M_AXI_IN1_AWUSER_WIDTH - 1:0] m_axi_IN1_AWUSER;
output   m_axi_IN1_WVALID;
input   m_axi_IN1_WREADY;
output  [C_M_AXI_IN1_DATA_WIDTH - 1:0] m_axi_IN1_WDATA;
output  [C_M_AXI_IN1_WSTRB_WIDTH - 1:0] m_axi_IN1_WSTRB;
output   m_axi_IN1_WLAST;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_WID;
output  [C_M_AXI_IN1_WUSER_WIDTH - 1:0] m_axi_IN1_WUSER;
output   m_axi_IN1_ARVALID;
input   m_axi_IN1_ARREADY;
output  [C_M_AXI_IN1_ADDR_WIDTH - 1:0] m_axi_IN1_ARADDR;
output  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_ARID;
output  [7:0] m_axi_IN1_ARLEN;
output  [2:0] m_axi_IN1_ARSIZE;
output  [1:0] m_axi_IN1_ARBURST;
output  [1:0] m_axi_IN1_ARLOCK;
output  [3:0] m_axi_IN1_ARCACHE;
output  [2:0] m_axi_IN1_ARPROT;
output  [3:0] m_axi_IN1_ARQOS;
output  [3:0] m_axi_IN1_ARREGION;
output  [C_M_AXI_IN1_ARUSER_WIDTH - 1:0] m_axi_IN1_ARUSER;
input   m_axi_IN1_RVALID;
output   m_axi_IN1_RREADY;
input  [C_M_AXI_IN1_DATA_WIDTH - 1:0] m_axi_IN1_RDATA;
input   m_axi_IN1_RLAST;
input  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_RID;
input  [C_M_AXI_IN1_RUSER_WIDTH - 1:0] m_axi_IN1_RUSER;
input  [1:0] m_axi_IN1_RRESP;
input   m_axi_IN1_BVALID;
output   m_axi_IN1_BREADY;
input  [1:0] m_axi_IN1_BRESP;
input  [C_M_AXI_IN1_ID_WIDTH - 1:0] m_axi_IN1_BID;
input  [C_M_AXI_IN1_BUSER_WIDTH - 1:0] m_axi_IN1_BUSER;
output   m_axi_IN2_AWVALID;
input   m_axi_IN2_AWREADY;
output  [C_M_AXI_IN2_ADDR_WIDTH - 1:0] m_axi_IN2_AWADDR;
output  [C_M_AXI_IN2_ID_WIDTH - 1:0] m_axi_IN2_AWID;
output  [7:0] m_axi_IN2_AWLEN;
output  [2:0] m_axi_IN2_AWSIZE;
output  [1:0] m_axi_IN2_AWBURST;
output  [1:0] m_axi_IN2_AWLOCK;
output  [3:0] m_axi_IN2_AWCACHE;
output  [2:0] m_axi_IN2_AWPROT;
output  [3:0] m_axi_IN2_AWQOS;
output  [3:0] m_axi_IN2_AWREGION;
output  [C_M_AXI_IN2_AWUSER_WIDTH - 1:0] m_axi_IN2_AWUSER;
output   m_axi_IN2_WVALID;
input   m_axi_IN2_WREADY;
output  [C_M_AXI_IN2_DATA_WIDTH - 1:0] m_axi_IN2_WDATA;
output  [C_M_AXI_IN2_WSTRB_WIDTH - 1:0] m_axi_IN2_WSTRB;
output   m_axi_IN2_WLAST;
output  [C_M_AXI_IN2_ID_WIDTH - 1:0] m_axi_IN2_WID;
output  [C_M_AXI_IN2_WUSER_WIDTH - 1:0] m_axi_IN2_WUSER;
output   m_axi_IN2_ARVALID;
input   m_axi_IN2_ARREADY;
output  [C_M_AXI_IN2_ADDR_WIDTH - 1:0] m_axi_IN2_ARADDR;
output  [C_M_AXI_IN2_ID_WIDTH - 1:0] m_axi_IN2_ARID;
output  [7:0] m_axi_IN2_ARLEN;
output  [2:0] m_axi_IN2_ARSIZE;
output  [1:0] m_axi_IN2_ARBURST;
output  [1:0] m_axi_IN2_ARLOCK;
output  [3:0] m_axi_IN2_ARCACHE;
output  [2:0] m_axi_IN2_ARPROT;
output  [3:0] m_axi_IN2_ARQOS;
output  [3:0] m_axi_IN2_ARREGION;
output  [C_M_AXI_IN2_ARUSER_WIDTH - 1:0] m_axi_IN2_ARUSER;
input   m_axi_IN2_RVALID;
output   m_axi_IN2_RREADY;
input  [C_M_AXI_IN2_DATA_WIDTH - 1:0] m_axi_IN2_RDATA;
input   m_axi_IN2_RLAST;
input  [C_M_AXI_IN2_ID_WIDTH - 1:0] m_axi_IN2_RID;
input  [C_M_AXI_IN2_RUSER_WIDTH - 1:0] m_axi_IN2_RUSER;
input  [1:0] m_axi_IN2_RRESP;
input   m_axi_IN2_BVALID;
output   m_axi_IN2_BREADY;
input  [1:0] m_axi_IN2_BRESP;
input  [C_M_AXI_IN2_ID_WIDTH - 1:0] m_axi_IN2_BID;
input  [C_M_AXI_IN2_BUSER_WIDTH - 1:0] m_axi_IN2_BUSER;
output   m_axi_IN3_AWVALID;
input   m_axi_IN3_AWREADY;
output  [C_M_AXI_IN3_ADDR_WIDTH - 1:0] m_axi_IN3_AWADDR;
output  [C_M_AXI_IN3_ID_WIDTH - 1:0] m_axi_IN3_AWID;
output  [7:0] m_axi_IN3_AWLEN;
output  [2:0] m_axi_IN3_AWSIZE;
output  [1:0] m_axi_IN3_AWBURST;
output  [1:0] m_axi_IN3_AWLOCK;
output  [3:0] m_axi_IN3_AWCACHE;
output  [2:0] m_axi_IN3_AWPROT;
output  [3:0] m_axi_IN3_AWQOS;
output  [3:0] m_axi_IN3_AWREGION;
output  [C_M_AXI_IN3_AWUSER_WIDTH - 1:0] m_axi_IN3_AWUSER;
output   m_axi_IN3_WVALID;
input   m_axi_IN3_WREADY;
output  [C_M_AXI_IN3_DATA_WIDTH - 1:0] m_axi_IN3_WDATA;
output  [C_M_AXI_IN3_WSTRB_WIDTH - 1:0] m_axi_IN3_WSTRB;
output   m_axi_IN3_WLAST;
output  [C_M_AXI_IN3_ID_WIDTH - 1:0] m_axi_IN3_WID;
output  [C_M_AXI_IN3_WUSER_WIDTH - 1:0] m_axi_IN3_WUSER;
output   m_axi_IN3_ARVALID;
input   m_axi_IN3_ARREADY;
output  [C_M_AXI_IN3_ADDR_WIDTH - 1:0] m_axi_IN3_ARADDR;
output  [C_M_AXI_IN3_ID_WIDTH - 1:0] m_axi_IN3_ARID;
output  [7:0] m_axi_IN3_ARLEN;
output  [2:0] m_axi_IN3_ARSIZE;
output  [1:0] m_axi_IN3_ARBURST;
output  [1:0] m_axi_IN3_ARLOCK;
output  [3:0] m_axi_IN3_ARCACHE;
output  [2:0] m_axi_IN3_ARPROT;
output  [3:0] m_axi_IN3_ARQOS;
output  [3:0] m_axi_IN3_ARREGION;
output  [C_M_AXI_IN3_ARUSER_WIDTH - 1:0] m_axi_IN3_ARUSER;
input   m_axi_IN3_RVALID;
output   m_axi_IN3_RREADY;
input  [C_M_AXI_IN3_DATA_WIDTH - 1:0] m_axi_IN3_RDATA;
input   m_axi_IN3_RLAST;
input  [C_M_AXI_IN3_ID_WIDTH - 1:0] m_axi_IN3_RID;
input  [C_M_AXI_IN3_RUSER_WIDTH - 1:0] m_axi_IN3_RUSER;
input  [1:0] m_axi_IN3_RRESP;
input   m_axi_IN3_BVALID;
output   m_axi_IN3_BREADY;
input  [1:0] m_axi_IN3_BRESP;
input  [C_M_AXI_IN3_ID_WIDTH - 1:0] m_axi_IN3_BID;
input  [C_M_AXI_IN3_BUSER_WIDTH - 1:0] m_axi_IN3_BUSER;
output   m_axi_W_AWVALID;
input   m_axi_W_AWREADY;
output  [C_M_AXI_W_ADDR_WIDTH - 1:0] m_axi_W_AWADDR;
output  [C_M_AXI_W_ID_WIDTH - 1:0] m_axi_W_AWID;
output  [7:0] m_axi_W_AWLEN;
output  [2:0] m_axi_W_AWSIZE;
output  [1:0] m_axi_W_AWBURST;
output  [1:0] m_axi_W_AWLOCK;
output  [3:0] m_axi_W_AWCACHE;
output  [2:0] m_axi_W_AWPROT;
output  [3:0] m_axi_W_AWQOS;
output  [3:0] m_axi_W_AWREGION;
output  [C_M_AXI_W_AWUSER_WIDTH - 1:0] m_axi_W_AWUSER;
output   m_axi_W_WVALID;
input   m_axi_W_WREADY;
output  [C_M_AXI_W_DATA_WIDTH - 1:0] m_axi_W_WDATA;
output  [C_M_AXI_W_WSTRB_WIDTH - 1:0] m_axi_W_WSTRB;
output   m_axi_W_WLAST;
output  [C_M_AXI_W_ID_WIDTH - 1:0] m_axi_W_WID;
output  [C_M_AXI_W_WUSER_WIDTH - 1:0] m_axi_W_WUSER;
output   m_axi_W_ARVALID;
input   m_axi_W_ARREADY;
output  [C_M_AXI_W_ADDR_WIDTH - 1:0] m_axi_W_ARADDR;
output  [C_M_AXI_W_ID_WIDTH - 1:0] m_axi_W_ARID;
output  [7:0] m_axi_W_ARLEN;
output  [2:0] m_axi_W_ARSIZE;
output  [1:0] m_axi_W_ARBURST;
output  [1:0] m_axi_W_ARLOCK;
output  [3:0] m_axi_W_ARCACHE;
output  [2:0] m_axi_W_ARPROT;
output  [3:0] m_axi_W_ARQOS;
output  [3:0] m_axi_W_ARREGION;
output  [C_M_AXI_W_ARUSER_WIDTH - 1:0] m_axi_W_ARUSER;
input   m_axi_W_RVALID;
output   m_axi_W_RREADY;
input  [C_M_AXI_W_DATA_WIDTH - 1:0] m_axi_W_RDATA;
input   m_axi_W_RLAST;
input  [C_M_AXI_W_ID_WIDTH - 1:0] m_axi_W_RID;
input  [C_M_AXI_W_RUSER_WIDTH - 1:0] m_axi_W_RUSER;
input  [1:0] m_axi_W_RRESP;
input   m_axi_W_BVALID;
output   m_axi_W_BREADY;
input  [1:0] m_axi_W_BRESP;
input  [C_M_AXI_W_ID_WIDTH - 1:0] m_axi_W_BID;
input  [C_M_AXI_W_BUSER_WIDTH - 1:0] m_axi_W_BUSER;
output   m_axi_OUT_r_AWVALID;
input   m_axi_OUT_r_AWREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_AWADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_AWID;
output  [7:0] m_axi_OUT_r_AWLEN;
output  [2:0] m_axi_OUT_r_AWSIZE;
output  [1:0] m_axi_OUT_r_AWBURST;
output  [1:0] m_axi_OUT_r_AWLOCK;
output  [3:0] m_axi_OUT_r_AWCACHE;
output  [2:0] m_axi_OUT_r_AWPROT;
output  [3:0] m_axi_OUT_r_AWQOS;
output  [3:0] m_axi_OUT_r_AWREGION;
output  [C_M_AXI_OUT_R_AWUSER_WIDTH - 1:0] m_axi_OUT_r_AWUSER;
output   m_axi_OUT_r_WVALID;
input   m_axi_OUT_r_WREADY;
output  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_WDATA;
output  [C_M_AXI_OUT_R_WSTRB_WIDTH - 1:0] m_axi_OUT_r_WSTRB;
output   m_axi_OUT_r_WLAST;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_WID;
output  [C_M_AXI_OUT_R_WUSER_WIDTH - 1:0] m_axi_OUT_r_WUSER;
output   m_axi_OUT_r_ARVALID;
input   m_axi_OUT_r_ARREADY;
output  [C_M_AXI_OUT_R_ADDR_WIDTH - 1:0] m_axi_OUT_r_ARADDR;
output  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_ARID;
output  [7:0] m_axi_OUT_r_ARLEN;
output  [2:0] m_axi_OUT_r_ARSIZE;
output  [1:0] m_axi_OUT_r_ARBURST;
output  [1:0] m_axi_OUT_r_ARLOCK;
output  [3:0] m_axi_OUT_r_ARCACHE;
output  [2:0] m_axi_OUT_r_ARPROT;
output  [3:0] m_axi_OUT_r_ARQOS;
output  [3:0] m_axi_OUT_r_ARREGION;
output  [C_M_AXI_OUT_R_ARUSER_WIDTH - 1:0] m_axi_OUT_r_ARUSER;
input   m_axi_OUT_r_RVALID;
output   m_axi_OUT_r_RREADY;
input  [C_M_AXI_OUT_R_DATA_WIDTH - 1:0] m_axi_OUT_r_RDATA;
input   m_axi_OUT_r_RLAST;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_RID;
input  [C_M_AXI_OUT_R_RUSER_WIDTH - 1:0] m_axi_OUT_r_RUSER;
input  [1:0] m_axi_OUT_r_RRESP;
input   m_axi_OUT_r_BVALID;
output   m_axi_OUT_r_BREADY;
input  [1:0] m_axi_OUT_r_BRESP;
input  [C_M_AXI_OUT_R_ID_WIDTH - 1:0] m_axi_OUT_r_BID;
input  [C_M_AXI_OUT_R_BUSER_WIDTH - 1:0] m_axi_OUT_r_BUSER;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] in1_V;
wire   [31:0] in2_V;
wire   [31:0] in3_V;
wire   [31:0] weight_V;
wire   [31:0] bias_V;
wire   [31:0] out_V;
reg    W_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    W_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    IN1_AWREADY;
wire    IN1_WREADY;
reg    IN1_ARVALID;
wire    IN1_ARREADY;
wire    IN1_RVALID;
reg    IN1_RREADY;
wire   [15:0] IN1_RDATA;
wire    IN1_RLAST;
wire   [0:0] IN1_RID;
wire   [0:0] IN1_RUSER;
wire   [1:0] IN1_RRESP;
wire    IN1_BVALID;
wire   [1:0] IN1_BRESP;
wire   [0:0] IN1_BID;
wire   [0:0] IN1_BUSER;
wire    IN2_AWREADY;
wire    IN2_WREADY;
reg    IN2_ARVALID;
wire    IN2_ARREADY;
wire    IN2_RVALID;
reg    IN2_RREADY;
wire   [15:0] IN2_RDATA;
wire    IN2_RLAST;
wire   [0:0] IN2_RID;
wire   [0:0] IN2_RUSER;
wire   [1:0] IN2_RRESP;
wire    IN2_BVALID;
wire   [1:0] IN2_BRESP;
wire   [0:0] IN2_BID;
wire   [0:0] IN2_BUSER;
wire    IN3_AWREADY;
wire    IN3_WREADY;
reg    IN3_ARVALID;
wire    IN3_ARREADY;
wire    IN3_RVALID;
reg    IN3_RREADY;
wire   [15:0] IN3_RDATA;
wire    IN3_RLAST;
wire   [0:0] IN3_RID;
wire   [0:0] IN3_RUSER;
wire   [1:0] IN3_RRESP;
wire    IN3_BVALID;
wire   [1:0] IN3_BRESP;
wire   [0:0] IN3_BID;
wire   [0:0] IN3_BUSER;
wire    W_AWREADY;
wire    W_WREADY;
reg    W_ARVALID;
wire    W_ARREADY;
reg   [31:0] W_ARADDR;
reg   [0:0] W_ARID;
reg   [31:0] W_ARLEN;
reg   [2:0] W_ARSIZE;
reg   [1:0] W_ARBURST;
reg   [1:0] W_ARLOCK;
reg   [3:0] W_ARCACHE;
reg   [2:0] W_ARPROT;
reg   [3:0] W_ARQOS;
reg   [3:0] W_ARREGION;
reg   [0:0] W_ARUSER;
wire    W_RVALID;
reg    W_RREADY;
wire   [15:0] W_RDATA;
wire    W_RLAST;
wire   [0:0] W_RID;
wire   [0:0] W_RUSER;
wire   [1:0] W_RRESP;
wire    W_BVALID;
wire   [1:0] W_BRESP;
wire   [0:0] W_BID;
wire   [0:0] W_BUSER;
reg    OUT_r_AWVALID;
wire    OUT_r_AWREADY;
reg    OUT_r_WVALID;
wire    OUT_r_WREADY;
wire    OUT_r_ARREADY;
wire    OUT_r_RVALID;
wire   [63:0] OUT_r_RDATA;
wire    OUT_r_RLAST;
wire   [0:0] OUT_r_RID;
wire   [0:0] OUT_r_RUSER;
wire   [1:0] OUT_r_RRESP;
wire    OUT_r_BVALID;
reg    OUT_r_BREADY;
wire   [1:0] OUT_r_BRESP;
wire   [0:0] OUT_r_BID;
wire   [0:0] OUT_r_BUSER;
reg   [6:0] phi_ln149_reg_598;
reg   [15:0] reg_1016;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln174_fu_1791_p2;
wire   [0:0] icmp_ln174_1_fu_1802_p2;
reg   [15:0] reg_1021;
reg   [15:0] reg_1026;
reg   [15:0] reg_1031;
reg   [15:0] reg_1036;
reg   [15:0] reg_1041;
reg   [15:0] reg_1046;
reg   [15:0] reg_1051;
reg   [15:0] reg_1056;
reg   [15:0] reg_1061;
reg   [15:0] reg_1066;
reg   [15:0] reg_1071;
reg   [15:0] reg_1076;
reg   [15:0] reg_1081;
reg   [15:0] reg_1086;
reg   [15:0] reg_1091;
reg   [15:0] reg_1096;
reg   [15:0] reg_1101;
reg   [15:0] reg_1106;
reg   [15:0] reg_1111;
reg   [15:0] reg_1116;
reg   [15:0] reg_1121;
reg   [15:0] reg_1126;
reg   [15:0] reg_1131;
reg   [15:0] reg_1136;
reg   [15:0] reg_1141;
reg   [15:0] reg_1146;
reg   [15:0] reg_1151;
reg   [15:0] reg_1156;
reg   [15:0] reg_1161;
reg   [15:0] reg_1166;
reg   [15:0] reg_1171;
reg   [15:0] reg_1176;
reg   [15:0] reg_1181;
reg   [15:0] reg_1186;
reg   [15:0] reg_1191;
reg   [15:0] reg_1196;
reg   [15:0] reg_1201;
reg   [15:0] reg_1206;
reg   [15:0] reg_1211;
reg   [15:0] reg_1216;
reg   [15:0] reg_1221;
reg   [15:0] reg_1226;
reg   [15:0] reg_1231;
reg   [15:0] reg_1236;
reg   [15:0] reg_1241;
reg   [15:0] reg_1246;
reg   [15:0] reg_1251;
reg   [15:0] reg_1256;
reg   [15:0] reg_1261;
reg   [15:0] reg_1266;
reg   [15:0] reg_1271;
reg   [15:0] reg_1276;
reg   [15:0] reg_1281;
reg   [15:0] reg_1286;
reg   [15:0] reg_1291;
reg   [15:0] reg_1296;
reg   [15:0] reg_1301;
reg   [15:0] reg_1306;
reg   [15:0] reg_1311;
reg   [15:0] reg_1316;
reg   [15:0] reg_1321;
reg   [15:0] reg_1326;
reg   [15:0] reg_1331;
reg   [28:0] out_V1_reg_2192;
reg   [31:0] W_addr_reg_2197;
reg   [30:0] weight_V7_reg_2203;
reg   [30:0] in3_V5_reg_2208;
reg   [30:0] in2_V3_reg_2213;
reg   [30:0] in1_V1_reg_2218;
wire   [0:0] icmp_ln149_fu_1406_p2;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln149_fu_1412_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] trunc_ln149_fu_1418_p1;
reg   [5:0] trunc_ln149_reg_2232;
wire   [31:0] row_fu_1760_p3;
reg   [31:0] row_reg_2236;
wire   [31:0] col_fu_1768_p3;
reg   [31:0] col_reg_2243;
wire   [15:0] trunc_ln162_fu_1776_p1;
reg   [15:0] trunc_ln162_reg_2250;
wire   [15:0] trunc_ln162_1_fu_1781_p1;
reg   [15:0] trunc_ln162_1_reg_2255;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg   [11:0] fm_in_buff1_0_V_address0;
reg    fm_in_buff1_0_V_ce0;
reg    fm_in_buff1_0_V_we0;
wire   [15:0] fm_in_buff1_0_V_q0;
reg   [11:0] fm_in_buff1_1_V_address0;
reg    fm_in_buff1_1_V_ce0;
reg    fm_in_buff1_1_V_we0;
wire   [15:0] fm_in_buff1_1_V_q0;
reg   [11:0] fm_in_buff1_2_V_address0;
reg    fm_in_buff1_2_V_ce0;
reg    fm_in_buff1_2_V_we0;
wire   [15:0] fm_in_buff1_2_V_q0;
reg   [11:0] fm_in_buff2_0_V_address0;
reg    fm_in_buff2_0_V_ce0;
reg    fm_in_buff2_0_V_we0;
wire   [15:0] fm_in_buff2_0_V_q0;
reg   [11:0] fm_in_buff2_1_V_address0;
reg    fm_in_buff2_1_V_ce0;
reg    fm_in_buff2_1_V_we0;
wire   [15:0] fm_in_buff2_1_V_q0;
reg   [11:0] fm_in_buff2_2_V_address0;
reg    fm_in_buff2_2_V_ce0;
reg    fm_in_buff2_2_V_we0;
wire   [15:0] fm_in_buff2_2_V_q0;
wire    grp_compute_output_fu_659_ap_start;
wire    grp_compute_output_fu_659_ap_done;
wire    grp_compute_output_fu_659_ap_idle;
wire    grp_compute_output_fu_659_ap_ready;
wire    grp_compute_output_fu_659_m_axi_weight_V_AWVALID;
wire   [31:0] grp_compute_output_fu_659_m_axi_weight_V_AWADDR;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_AWID;
wire   [31:0] grp_compute_output_fu_659_m_axi_weight_V_AWLEN;
wire   [2:0] grp_compute_output_fu_659_m_axi_weight_V_AWSIZE;
wire   [1:0] grp_compute_output_fu_659_m_axi_weight_V_AWBURST;
wire   [1:0] grp_compute_output_fu_659_m_axi_weight_V_AWLOCK;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_AWCACHE;
wire   [2:0] grp_compute_output_fu_659_m_axi_weight_V_AWPROT;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_AWQOS;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_AWREGION;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_AWUSER;
wire    grp_compute_output_fu_659_m_axi_weight_V_WVALID;
wire   [15:0] grp_compute_output_fu_659_m_axi_weight_V_WDATA;
wire   [1:0] grp_compute_output_fu_659_m_axi_weight_V_WSTRB;
wire    grp_compute_output_fu_659_m_axi_weight_V_WLAST;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_WID;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_WUSER;
wire    grp_compute_output_fu_659_m_axi_weight_V_ARVALID;
wire   [31:0] grp_compute_output_fu_659_m_axi_weight_V_ARADDR;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_ARID;
wire   [31:0] grp_compute_output_fu_659_m_axi_weight_V_ARLEN;
wire   [2:0] grp_compute_output_fu_659_m_axi_weight_V_ARSIZE;
wire   [1:0] grp_compute_output_fu_659_m_axi_weight_V_ARBURST;
wire   [1:0] grp_compute_output_fu_659_m_axi_weight_V_ARLOCK;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_ARCACHE;
wire   [2:0] grp_compute_output_fu_659_m_axi_weight_V_ARPROT;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_ARQOS;
wire   [3:0] grp_compute_output_fu_659_m_axi_weight_V_ARREGION;
wire   [0:0] grp_compute_output_fu_659_m_axi_weight_V_ARUSER;
wire    grp_compute_output_fu_659_m_axi_weight_V_RREADY;
wire    grp_compute_output_fu_659_m_axi_weight_V_BREADY;
wire    grp_compute_output_fu_659_m_axi_out_V_AWVALID;
wire   [31:0] grp_compute_output_fu_659_m_axi_out_V_AWADDR;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_AWID;
wire   [31:0] grp_compute_output_fu_659_m_axi_out_V_AWLEN;
wire   [2:0] grp_compute_output_fu_659_m_axi_out_V_AWSIZE;
wire   [1:0] grp_compute_output_fu_659_m_axi_out_V_AWBURST;
wire   [1:0] grp_compute_output_fu_659_m_axi_out_V_AWLOCK;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_AWCACHE;
wire   [2:0] grp_compute_output_fu_659_m_axi_out_V_AWPROT;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_AWQOS;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_AWREGION;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_AWUSER;
wire    grp_compute_output_fu_659_m_axi_out_V_WVALID;
wire   [63:0] grp_compute_output_fu_659_m_axi_out_V_WDATA;
wire   [7:0] grp_compute_output_fu_659_m_axi_out_V_WSTRB;
wire    grp_compute_output_fu_659_m_axi_out_V_WLAST;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_WID;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_WUSER;
wire    grp_compute_output_fu_659_m_axi_out_V_ARVALID;
wire   [31:0] grp_compute_output_fu_659_m_axi_out_V_ARADDR;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_ARID;
wire   [31:0] grp_compute_output_fu_659_m_axi_out_V_ARLEN;
wire   [2:0] grp_compute_output_fu_659_m_axi_out_V_ARSIZE;
wire   [1:0] grp_compute_output_fu_659_m_axi_out_V_ARBURST;
wire   [1:0] grp_compute_output_fu_659_m_axi_out_V_ARLOCK;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_ARCACHE;
wire   [2:0] grp_compute_output_fu_659_m_axi_out_V_ARPROT;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_ARQOS;
wire   [3:0] grp_compute_output_fu_659_m_axi_out_V_ARREGION;
wire   [0:0] grp_compute_output_fu_659_m_axi_out_V_ARUSER;
wire    grp_compute_output_fu_659_m_axi_out_V_RREADY;
wire    grp_compute_output_fu_659_m_axi_out_V_BREADY;
wire   [11:0] grp_compute_output_fu_659_fm_in_buff_0_V_address0;
wire    grp_compute_output_fu_659_fm_in_buff_0_V_ce0;
reg   [15:0] grp_compute_output_fu_659_fm_in_buff_0_V_q0;
wire   [11:0] grp_compute_output_fu_659_fm_in_buff_1_V_address0;
wire    grp_compute_output_fu_659_fm_in_buff_1_V_ce0;
reg   [15:0] grp_compute_output_fu_659_fm_in_buff_1_V_q0;
wire   [11:0] grp_compute_output_fu_659_fm_in_buff_2_V_address0;
wire    grp_compute_output_fu_659_fm_in_buff_2_V_ce0;
reg   [15:0] grp_compute_output_fu_659_fm_in_buff_2_V_q0;
reg   [31:0] grp_compute_output_fu_659_row;
reg   [31:0] grp_compute_output_fu_659_col;
wire    grp_load_input_fu_740_ap_start;
wire    grp_load_input_fu_740_ap_done;
wire    grp_load_input_fu_740_ap_idle;
wire    grp_load_input_fu_740_ap_ready;
wire    grp_load_input_fu_740_m_axi_in1_V_AWVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in1_V_AWADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_AWID;
wire   [31:0] grp_load_input_fu_740_m_axi_in1_V_AWLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in1_V_AWSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in1_V_AWBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in1_V_AWLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_AWCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in1_V_AWPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_AWQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_AWREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_AWUSER;
wire    grp_load_input_fu_740_m_axi_in1_V_WVALID;
wire   [15:0] grp_load_input_fu_740_m_axi_in1_V_WDATA;
wire   [1:0] grp_load_input_fu_740_m_axi_in1_V_WSTRB;
wire    grp_load_input_fu_740_m_axi_in1_V_WLAST;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_WID;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_WUSER;
wire    grp_load_input_fu_740_m_axi_in1_V_ARVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in1_V_ARADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_ARID;
wire   [31:0] grp_load_input_fu_740_m_axi_in1_V_ARLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in1_V_ARSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in1_V_ARBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in1_V_ARLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_ARCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in1_V_ARPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_ARQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in1_V_ARREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in1_V_ARUSER;
wire    grp_load_input_fu_740_m_axi_in1_V_RREADY;
wire    grp_load_input_fu_740_m_axi_in1_V_BREADY;
wire    grp_load_input_fu_740_m_axi_in2_V_AWVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in2_V_AWADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_AWID;
wire   [31:0] grp_load_input_fu_740_m_axi_in2_V_AWLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in2_V_AWSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in2_V_AWBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in2_V_AWLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_AWCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in2_V_AWPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_AWQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_AWREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_AWUSER;
wire    grp_load_input_fu_740_m_axi_in2_V_WVALID;
wire   [15:0] grp_load_input_fu_740_m_axi_in2_V_WDATA;
wire   [1:0] grp_load_input_fu_740_m_axi_in2_V_WSTRB;
wire    grp_load_input_fu_740_m_axi_in2_V_WLAST;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_WID;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_WUSER;
wire    grp_load_input_fu_740_m_axi_in2_V_ARVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in2_V_ARADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_ARID;
wire   [31:0] grp_load_input_fu_740_m_axi_in2_V_ARLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in2_V_ARSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in2_V_ARBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in2_V_ARLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_ARCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in2_V_ARPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_ARQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in2_V_ARREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in2_V_ARUSER;
wire    grp_load_input_fu_740_m_axi_in2_V_RREADY;
wire    grp_load_input_fu_740_m_axi_in2_V_BREADY;
wire    grp_load_input_fu_740_m_axi_in3_V_AWVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in3_V_AWADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_AWID;
wire   [31:0] grp_load_input_fu_740_m_axi_in3_V_AWLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in3_V_AWSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in3_V_AWBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in3_V_AWLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_AWCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in3_V_AWPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_AWQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_AWREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_AWUSER;
wire    grp_load_input_fu_740_m_axi_in3_V_WVALID;
wire   [15:0] grp_load_input_fu_740_m_axi_in3_V_WDATA;
wire   [1:0] grp_load_input_fu_740_m_axi_in3_V_WSTRB;
wire    grp_load_input_fu_740_m_axi_in3_V_WLAST;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_WID;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_WUSER;
wire    grp_load_input_fu_740_m_axi_in3_V_ARVALID;
wire   [31:0] grp_load_input_fu_740_m_axi_in3_V_ARADDR;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_ARID;
wire   [31:0] grp_load_input_fu_740_m_axi_in3_V_ARLEN;
wire   [2:0] grp_load_input_fu_740_m_axi_in3_V_ARSIZE;
wire   [1:0] grp_load_input_fu_740_m_axi_in3_V_ARBURST;
wire   [1:0] grp_load_input_fu_740_m_axi_in3_V_ARLOCK;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_ARCACHE;
wire   [2:0] grp_load_input_fu_740_m_axi_in3_V_ARPROT;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_ARQOS;
wire   [3:0] grp_load_input_fu_740_m_axi_in3_V_ARREGION;
wire   [0:0] grp_load_input_fu_740_m_axi_in3_V_ARUSER;
wire    grp_load_input_fu_740_m_axi_in3_V_RREADY;
wire    grp_load_input_fu_740_m_axi_in3_V_BREADY;
wire   [11:0] grp_load_input_fu_740_fm_in_buff_0_V_address0;
wire    grp_load_input_fu_740_fm_in_buff_0_V_ce0;
wire    grp_load_input_fu_740_fm_in_buff_0_V_we0;
wire   [15:0] grp_load_input_fu_740_fm_in_buff_0_V_d0;
wire   [11:0] grp_load_input_fu_740_fm_in_buff_1_V_address0;
wire    grp_load_input_fu_740_fm_in_buff_1_V_ce0;
wire    grp_load_input_fu_740_fm_in_buff_1_V_we0;
wire   [15:0] grp_load_input_fu_740_fm_in_buff_1_V_d0;
wire   [11:0] grp_load_input_fu_740_fm_in_buff_2_V_address0;
wire    grp_load_input_fu_740_fm_in_buff_2_V_ce0;
wire    grp_load_input_fu_740_fm_in_buff_2_V_we0;
wire   [15:0] grp_load_input_fu_740_fm_in_buff_2_V_d0;
reg   [15:0] grp_load_input_fu_740_fm_row;
reg   [15:0] grp_load_input_fu_740_fm_col;
wire   [0:0] ap_phi_mux_pp_0_phi_fu_613_p4;
reg   [0:0] pp_0_reg_609;
wire    ap_CS_fsm_state12;
wire   [0:0] ap_phi_mux_pp_1_phi_fu_650_p4;
reg   [31:0] row_assign_reg_620;
reg   [31:0] col_assign_reg_632;
reg   [0:0] pp_1_reg_644;
wire    ap_CS_fsm_state15;
reg    ap_block_state15_on_subcall_done;
wire    ap_CS_fsm_state14;
reg    ap_block_state14_on_subcall_done;
reg    grp_compute_output_fu_659_ap_start_reg;
wire    ap_CS_fsm_state17;
reg    grp_load_input_fu_740_ap_start_reg;
wire    ap_CS_fsm_state11;
wire   [63:0] empty_fu_1356_p1;
reg   [15:0] bias_buff_63_V_fu_270;
reg   [15:0] bias_buff_63_V_1_fu_274;
reg   [15:0] bias_buff_63_V_2_fu_278;
reg   [15:0] bias_buff_63_V_3_fu_282;
reg   [15:0] bias_buff_63_V_4_fu_286;
reg   [15:0] bias_buff_63_V_5_fu_290;
reg   [15:0] bias_buff_63_V_6_fu_294;
reg   [15:0] bias_buff_63_V_7_fu_298;
reg   [15:0] bias_buff_63_V_8_fu_302;
reg   [15:0] bias_buff_63_V_9_fu_306;
reg   [15:0] bias_buff_63_V_10_fu_310;
reg   [15:0] bias_buff_63_V_11_fu_314;
reg   [15:0] bias_buff_63_V_12_fu_318;
reg   [15:0] bias_buff_63_V_13_fu_322;
reg   [15:0] bias_buff_63_V_14_fu_326;
reg   [15:0] bias_buff_63_V_15_fu_330;
reg   [15:0] bias_buff_63_V_16_fu_334;
reg   [15:0] bias_buff_63_V_17_fu_338;
reg   [15:0] bias_buff_63_V_18_fu_342;
reg   [15:0] bias_buff_63_V_19_fu_346;
reg   [15:0] bias_buff_63_V_20_fu_350;
reg   [15:0] bias_buff_63_V_21_fu_354;
reg   [15:0] bias_buff_63_V_22_fu_358;
reg   [15:0] bias_buff_63_V_23_fu_362;
reg   [15:0] bias_buff_63_V_24_fu_366;
reg   [15:0] bias_buff_63_V_25_fu_370;
reg   [15:0] bias_buff_63_V_26_fu_374;
reg   [15:0] bias_buff_63_V_27_fu_378;
reg   [15:0] bias_buff_63_V_28_fu_382;
reg   [15:0] bias_buff_63_V_29_fu_386;
reg   [15:0] bias_buff_63_V_30_fu_390;
reg   [15:0] bias_buff_63_V_31_fu_394;
reg   [15:0] bias_buff_63_V_32_fu_398;
reg   [15:0] bias_buff_63_V_33_fu_402;
reg   [15:0] bias_buff_63_V_34_fu_406;
reg   [15:0] bias_buff_63_V_35_fu_410;
reg   [15:0] bias_buff_63_V_36_fu_414;
reg   [15:0] bias_buff_63_V_37_fu_418;
reg   [15:0] bias_buff_63_V_38_fu_422;
reg   [15:0] bias_buff_63_V_39_fu_426;
reg   [15:0] bias_buff_63_V_40_fu_430;
reg   [15:0] bias_buff_63_V_41_fu_434;
reg   [15:0] bias_buff_63_V_42_fu_438;
reg   [15:0] bias_buff_63_V_43_fu_442;
reg   [15:0] bias_buff_63_V_44_fu_446;
reg   [15:0] bias_buff_63_V_45_fu_450;
reg   [15:0] bias_buff_63_V_46_fu_454;
reg   [15:0] bias_buff_63_V_47_fu_458;
reg   [15:0] bias_buff_63_V_48_fu_462;
reg   [15:0] bias_buff_63_V_49_fu_466;
reg   [15:0] bias_buff_63_V_50_fu_470;
reg   [15:0] bias_buff_63_V_51_fu_474;
reg   [15:0] bias_buff_63_V_52_fu_478;
reg   [15:0] bias_buff_63_V_53_fu_482;
reg   [15:0] bias_buff_63_V_54_fu_486;
reg   [15:0] bias_buff_63_V_55_fu_490;
reg   [15:0] bias_buff_63_V_56_fu_494;
reg   [15:0] bias_buff_63_V_57_fu_498;
reg   [15:0] bias_buff_63_V_58_fu_502;
reg   [15:0] bias_buff_63_V_59_fu_506;
reg   [15:0] bias_buff_63_V_60_fu_510;
reg   [15:0] bias_buff_63_V_61_fu_514;
reg   [15:0] bias_buff_63_V_62_fu_518;
reg   [15:0] bias_buff_63_V_63_fu_522;
wire   [30:0] bias_V9_fu_1346_p4;
wire   [31:0] add_ln75_fu_1742_p2;
wire   [0:0] icmp_ln75_fu_1748_p2;
wire   [31:0] add_ln76_fu_1754_p2;
wire   [31:0] add_ln174_fu_1786_p2;
wire   [31:0] add_ln174_1_fu_1797_p2;
reg    ap_block_state17_on_subcall_done;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_compute_output_fu_659_ap_start_reg = 1'b0;
#0 grp_load_input_fu_740_ap_start_reg = 1'b0;
end

conv_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
conv_CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .in1_V(in1_V),
    .in2_V(in2_V),
    .in3_V(in3_V),
    .weight_V(weight_V),
    .bias_V(bias_V),
    .out_V(out_V)
);

conv_IN1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IN1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN1_CACHE_VALUE ))
conv_IN1_m_axi_U(
    .AWVALID(m_axi_IN1_AWVALID),
    .AWREADY(m_axi_IN1_AWREADY),
    .AWADDR(m_axi_IN1_AWADDR),
    .AWID(m_axi_IN1_AWID),
    .AWLEN(m_axi_IN1_AWLEN),
    .AWSIZE(m_axi_IN1_AWSIZE),
    .AWBURST(m_axi_IN1_AWBURST),
    .AWLOCK(m_axi_IN1_AWLOCK),
    .AWCACHE(m_axi_IN1_AWCACHE),
    .AWPROT(m_axi_IN1_AWPROT),
    .AWQOS(m_axi_IN1_AWQOS),
    .AWREGION(m_axi_IN1_AWREGION),
    .AWUSER(m_axi_IN1_AWUSER),
    .WVALID(m_axi_IN1_WVALID),
    .WREADY(m_axi_IN1_WREADY),
    .WDATA(m_axi_IN1_WDATA),
    .WSTRB(m_axi_IN1_WSTRB),
    .WLAST(m_axi_IN1_WLAST),
    .WID(m_axi_IN1_WID),
    .WUSER(m_axi_IN1_WUSER),
    .ARVALID(m_axi_IN1_ARVALID),
    .ARREADY(m_axi_IN1_ARREADY),
    .ARADDR(m_axi_IN1_ARADDR),
    .ARID(m_axi_IN1_ARID),
    .ARLEN(m_axi_IN1_ARLEN),
    .ARSIZE(m_axi_IN1_ARSIZE),
    .ARBURST(m_axi_IN1_ARBURST),
    .ARLOCK(m_axi_IN1_ARLOCK),
    .ARCACHE(m_axi_IN1_ARCACHE),
    .ARPROT(m_axi_IN1_ARPROT),
    .ARQOS(m_axi_IN1_ARQOS),
    .ARREGION(m_axi_IN1_ARREGION),
    .ARUSER(m_axi_IN1_ARUSER),
    .RVALID(m_axi_IN1_RVALID),
    .RREADY(m_axi_IN1_RREADY),
    .RDATA(m_axi_IN1_RDATA),
    .RLAST(m_axi_IN1_RLAST),
    .RID(m_axi_IN1_RID),
    .RUSER(m_axi_IN1_RUSER),
    .RRESP(m_axi_IN1_RRESP),
    .BVALID(m_axi_IN1_BVALID),
    .BREADY(m_axi_IN1_BREADY),
    .BRESP(m_axi_IN1_BRESP),
    .BID(m_axi_IN1_BID),
    .BUSER(m_axi_IN1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IN1_ARVALID),
    .I_ARREADY(IN1_ARREADY),
    .I_ARADDR(grp_load_input_fu_740_m_axi_in1_V_ARADDR),
    .I_ARID(grp_load_input_fu_740_m_axi_in1_V_ARID),
    .I_ARLEN(grp_load_input_fu_740_m_axi_in1_V_ARLEN),
    .I_ARSIZE(grp_load_input_fu_740_m_axi_in1_V_ARSIZE),
    .I_ARLOCK(grp_load_input_fu_740_m_axi_in1_V_ARLOCK),
    .I_ARCACHE(grp_load_input_fu_740_m_axi_in1_V_ARCACHE),
    .I_ARQOS(grp_load_input_fu_740_m_axi_in1_V_ARQOS),
    .I_ARPROT(grp_load_input_fu_740_m_axi_in1_V_ARPROT),
    .I_ARUSER(grp_load_input_fu_740_m_axi_in1_V_ARUSER),
    .I_ARBURST(grp_load_input_fu_740_m_axi_in1_V_ARBURST),
    .I_ARREGION(grp_load_input_fu_740_m_axi_in1_V_ARREGION),
    .I_RVALID(IN1_RVALID),
    .I_RREADY(IN1_RREADY),
    .I_RDATA(IN1_RDATA),
    .I_RID(IN1_RID),
    .I_RUSER(IN1_RUSER),
    .I_RRESP(IN1_RRESP),
    .I_RLAST(IN1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IN1_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(IN1_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(IN1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IN1_BRESP),
    .I_BID(IN1_BID),
    .I_BUSER(IN1_BUSER)
);

conv_IN2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IN2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN2_CACHE_VALUE ))
conv_IN2_m_axi_U(
    .AWVALID(m_axi_IN2_AWVALID),
    .AWREADY(m_axi_IN2_AWREADY),
    .AWADDR(m_axi_IN2_AWADDR),
    .AWID(m_axi_IN2_AWID),
    .AWLEN(m_axi_IN2_AWLEN),
    .AWSIZE(m_axi_IN2_AWSIZE),
    .AWBURST(m_axi_IN2_AWBURST),
    .AWLOCK(m_axi_IN2_AWLOCK),
    .AWCACHE(m_axi_IN2_AWCACHE),
    .AWPROT(m_axi_IN2_AWPROT),
    .AWQOS(m_axi_IN2_AWQOS),
    .AWREGION(m_axi_IN2_AWREGION),
    .AWUSER(m_axi_IN2_AWUSER),
    .WVALID(m_axi_IN2_WVALID),
    .WREADY(m_axi_IN2_WREADY),
    .WDATA(m_axi_IN2_WDATA),
    .WSTRB(m_axi_IN2_WSTRB),
    .WLAST(m_axi_IN2_WLAST),
    .WID(m_axi_IN2_WID),
    .WUSER(m_axi_IN2_WUSER),
    .ARVALID(m_axi_IN2_ARVALID),
    .ARREADY(m_axi_IN2_ARREADY),
    .ARADDR(m_axi_IN2_ARADDR),
    .ARID(m_axi_IN2_ARID),
    .ARLEN(m_axi_IN2_ARLEN),
    .ARSIZE(m_axi_IN2_ARSIZE),
    .ARBURST(m_axi_IN2_ARBURST),
    .ARLOCK(m_axi_IN2_ARLOCK),
    .ARCACHE(m_axi_IN2_ARCACHE),
    .ARPROT(m_axi_IN2_ARPROT),
    .ARQOS(m_axi_IN2_ARQOS),
    .ARREGION(m_axi_IN2_ARREGION),
    .ARUSER(m_axi_IN2_ARUSER),
    .RVALID(m_axi_IN2_RVALID),
    .RREADY(m_axi_IN2_RREADY),
    .RDATA(m_axi_IN2_RDATA),
    .RLAST(m_axi_IN2_RLAST),
    .RID(m_axi_IN2_RID),
    .RUSER(m_axi_IN2_RUSER),
    .RRESP(m_axi_IN2_RRESP),
    .BVALID(m_axi_IN2_BVALID),
    .BREADY(m_axi_IN2_BREADY),
    .BRESP(m_axi_IN2_BRESP),
    .BID(m_axi_IN2_BID),
    .BUSER(m_axi_IN2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IN2_ARVALID),
    .I_ARREADY(IN2_ARREADY),
    .I_ARADDR(grp_load_input_fu_740_m_axi_in2_V_ARADDR),
    .I_ARID(grp_load_input_fu_740_m_axi_in2_V_ARID),
    .I_ARLEN(grp_load_input_fu_740_m_axi_in2_V_ARLEN),
    .I_ARSIZE(grp_load_input_fu_740_m_axi_in2_V_ARSIZE),
    .I_ARLOCK(grp_load_input_fu_740_m_axi_in2_V_ARLOCK),
    .I_ARCACHE(grp_load_input_fu_740_m_axi_in2_V_ARCACHE),
    .I_ARQOS(grp_load_input_fu_740_m_axi_in2_V_ARQOS),
    .I_ARPROT(grp_load_input_fu_740_m_axi_in2_V_ARPROT),
    .I_ARUSER(grp_load_input_fu_740_m_axi_in2_V_ARUSER),
    .I_ARBURST(grp_load_input_fu_740_m_axi_in2_V_ARBURST),
    .I_ARREGION(grp_load_input_fu_740_m_axi_in2_V_ARREGION),
    .I_RVALID(IN2_RVALID),
    .I_RREADY(IN2_RREADY),
    .I_RDATA(IN2_RDATA),
    .I_RID(IN2_RID),
    .I_RUSER(IN2_RUSER),
    .I_RRESP(IN2_RRESP),
    .I_RLAST(IN2_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IN2_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(IN2_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(IN2_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IN2_BRESP),
    .I_BID(IN2_BID),
    .I_BUSER(IN2_BUSER)
);

conv_IN3_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_IN3_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_IN3_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_IN3_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_IN3_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_IN3_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_IN3_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_IN3_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_IN3_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_IN3_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_IN3_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_IN3_CACHE_VALUE ))
conv_IN3_m_axi_U(
    .AWVALID(m_axi_IN3_AWVALID),
    .AWREADY(m_axi_IN3_AWREADY),
    .AWADDR(m_axi_IN3_AWADDR),
    .AWID(m_axi_IN3_AWID),
    .AWLEN(m_axi_IN3_AWLEN),
    .AWSIZE(m_axi_IN3_AWSIZE),
    .AWBURST(m_axi_IN3_AWBURST),
    .AWLOCK(m_axi_IN3_AWLOCK),
    .AWCACHE(m_axi_IN3_AWCACHE),
    .AWPROT(m_axi_IN3_AWPROT),
    .AWQOS(m_axi_IN3_AWQOS),
    .AWREGION(m_axi_IN3_AWREGION),
    .AWUSER(m_axi_IN3_AWUSER),
    .WVALID(m_axi_IN3_WVALID),
    .WREADY(m_axi_IN3_WREADY),
    .WDATA(m_axi_IN3_WDATA),
    .WSTRB(m_axi_IN3_WSTRB),
    .WLAST(m_axi_IN3_WLAST),
    .WID(m_axi_IN3_WID),
    .WUSER(m_axi_IN3_WUSER),
    .ARVALID(m_axi_IN3_ARVALID),
    .ARREADY(m_axi_IN3_ARREADY),
    .ARADDR(m_axi_IN3_ARADDR),
    .ARID(m_axi_IN3_ARID),
    .ARLEN(m_axi_IN3_ARLEN),
    .ARSIZE(m_axi_IN3_ARSIZE),
    .ARBURST(m_axi_IN3_ARBURST),
    .ARLOCK(m_axi_IN3_ARLOCK),
    .ARCACHE(m_axi_IN3_ARCACHE),
    .ARPROT(m_axi_IN3_ARPROT),
    .ARQOS(m_axi_IN3_ARQOS),
    .ARREGION(m_axi_IN3_ARREGION),
    .ARUSER(m_axi_IN3_ARUSER),
    .RVALID(m_axi_IN3_RVALID),
    .RREADY(m_axi_IN3_RREADY),
    .RDATA(m_axi_IN3_RDATA),
    .RLAST(m_axi_IN3_RLAST),
    .RID(m_axi_IN3_RID),
    .RUSER(m_axi_IN3_RUSER),
    .RRESP(m_axi_IN3_RRESP),
    .BVALID(m_axi_IN3_BVALID),
    .BREADY(m_axi_IN3_BREADY),
    .BRESP(m_axi_IN3_BRESP),
    .BID(m_axi_IN3_BID),
    .BUSER(m_axi_IN3_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(IN3_ARVALID),
    .I_ARREADY(IN3_ARREADY),
    .I_ARADDR(grp_load_input_fu_740_m_axi_in3_V_ARADDR),
    .I_ARID(grp_load_input_fu_740_m_axi_in3_V_ARID),
    .I_ARLEN(grp_load_input_fu_740_m_axi_in3_V_ARLEN),
    .I_ARSIZE(grp_load_input_fu_740_m_axi_in3_V_ARSIZE),
    .I_ARLOCK(grp_load_input_fu_740_m_axi_in3_V_ARLOCK),
    .I_ARCACHE(grp_load_input_fu_740_m_axi_in3_V_ARCACHE),
    .I_ARQOS(grp_load_input_fu_740_m_axi_in3_V_ARQOS),
    .I_ARPROT(grp_load_input_fu_740_m_axi_in3_V_ARPROT),
    .I_ARUSER(grp_load_input_fu_740_m_axi_in3_V_ARUSER),
    .I_ARBURST(grp_load_input_fu_740_m_axi_in3_V_ARBURST),
    .I_ARREGION(grp_load_input_fu_740_m_axi_in3_V_ARREGION),
    .I_RVALID(IN3_RVALID),
    .I_RREADY(IN3_RREADY),
    .I_RDATA(IN3_RDATA),
    .I_RID(IN3_RID),
    .I_RUSER(IN3_RUSER),
    .I_RRESP(IN3_RRESP),
    .I_RLAST(IN3_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(IN3_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(IN3_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(IN3_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(IN3_BRESP),
    .I_BID(IN3_BID),
    .I_BUSER(IN3_BUSER)
);

conv_W_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_W_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_W_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_W_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_W_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_W_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_W_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_W_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_W_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_W_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_W_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_W_CACHE_VALUE ))
conv_W_m_axi_U(
    .AWVALID(m_axi_W_AWVALID),
    .AWREADY(m_axi_W_AWREADY),
    .AWADDR(m_axi_W_AWADDR),
    .AWID(m_axi_W_AWID),
    .AWLEN(m_axi_W_AWLEN),
    .AWSIZE(m_axi_W_AWSIZE),
    .AWBURST(m_axi_W_AWBURST),
    .AWLOCK(m_axi_W_AWLOCK),
    .AWCACHE(m_axi_W_AWCACHE),
    .AWPROT(m_axi_W_AWPROT),
    .AWQOS(m_axi_W_AWQOS),
    .AWREGION(m_axi_W_AWREGION),
    .AWUSER(m_axi_W_AWUSER),
    .WVALID(m_axi_W_WVALID),
    .WREADY(m_axi_W_WREADY),
    .WDATA(m_axi_W_WDATA),
    .WSTRB(m_axi_W_WSTRB),
    .WLAST(m_axi_W_WLAST),
    .WID(m_axi_W_WID),
    .WUSER(m_axi_W_WUSER),
    .ARVALID(m_axi_W_ARVALID),
    .ARREADY(m_axi_W_ARREADY),
    .ARADDR(m_axi_W_ARADDR),
    .ARID(m_axi_W_ARID),
    .ARLEN(m_axi_W_ARLEN),
    .ARSIZE(m_axi_W_ARSIZE),
    .ARBURST(m_axi_W_ARBURST),
    .ARLOCK(m_axi_W_ARLOCK),
    .ARCACHE(m_axi_W_ARCACHE),
    .ARPROT(m_axi_W_ARPROT),
    .ARQOS(m_axi_W_ARQOS),
    .ARREGION(m_axi_W_ARREGION),
    .ARUSER(m_axi_W_ARUSER),
    .RVALID(m_axi_W_RVALID),
    .RREADY(m_axi_W_RREADY),
    .RDATA(m_axi_W_RDATA),
    .RLAST(m_axi_W_RLAST),
    .RID(m_axi_W_RID),
    .RUSER(m_axi_W_RUSER),
    .RRESP(m_axi_W_RRESP),
    .BVALID(m_axi_W_BVALID),
    .BREADY(m_axi_W_BREADY),
    .BRESP(m_axi_W_BRESP),
    .BID(m_axi_W_BID),
    .BUSER(m_axi_W_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(W_ARVALID),
    .I_ARREADY(W_ARREADY),
    .I_ARADDR(W_ARADDR),
    .I_ARID(W_ARID),
    .I_ARLEN(W_ARLEN),
    .I_ARSIZE(W_ARSIZE),
    .I_ARLOCK(W_ARLOCK),
    .I_ARCACHE(W_ARCACHE),
    .I_ARQOS(W_ARQOS),
    .I_ARPROT(W_ARPROT),
    .I_ARUSER(W_ARUSER),
    .I_ARBURST(W_ARBURST),
    .I_ARREGION(W_ARREGION),
    .I_RVALID(W_RVALID),
    .I_RREADY(W_RREADY),
    .I_RDATA(W_RDATA),
    .I_RID(W_RID),
    .I_RUSER(W_RUSER),
    .I_RRESP(W_RRESP),
    .I_RLAST(W_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(W_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(W_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(W_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(W_BRESP),
    .I_BID(W_BID),
    .I_BUSER(W_BUSER)
);

conv_OUT_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 64 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUT_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUT_R_CACHE_VALUE ))
conv_OUT_r_m_axi_U(
    .AWVALID(m_axi_OUT_r_AWVALID),
    .AWREADY(m_axi_OUT_r_AWREADY),
    .AWADDR(m_axi_OUT_r_AWADDR),
    .AWID(m_axi_OUT_r_AWID),
    .AWLEN(m_axi_OUT_r_AWLEN),
    .AWSIZE(m_axi_OUT_r_AWSIZE),
    .AWBURST(m_axi_OUT_r_AWBURST),
    .AWLOCK(m_axi_OUT_r_AWLOCK),
    .AWCACHE(m_axi_OUT_r_AWCACHE),
    .AWPROT(m_axi_OUT_r_AWPROT),
    .AWQOS(m_axi_OUT_r_AWQOS),
    .AWREGION(m_axi_OUT_r_AWREGION),
    .AWUSER(m_axi_OUT_r_AWUSER),
    .WVALID(m_axi_OUT_r_WVALID),
    .WREADY(m_axi_OUT_r_WREADY),
    .WDATA(m_axi_OUT_r_WDATA),
    .WSTRB(m_axi_OUT_r_WSTRB),
    .WLAST(m_axi_OUT_r_WLAST),
    .WID(m_axi_OUT_r_WID),
    .WUSER(m_axi_OUT_r_WUSER),
    .ARVALID(m_axi_OUT_r_ARVALID),
    .ARREADY(m_axi_OUT_r_ARREADY),
    .ARADDR(m_axi_OUT_r_ARADDR),
    .ARID(m_axi_OUT_r_ARID),
    .ARLEN(m_axi_OUT_r_ARLEN),
    .ARSIZE(m_axi_OUT_r_ARSIZE),
    .ARBURST(m_axi_OUT_r_ARBURST),
    .ARLOCK(m_axi_OUT_r_ARLOCK),
    .ARCACHE(m_axi_OUT_r_ARCACHE),
    .ARPROT(m_axi_OUT_r_ARPROT),
    .ARQOS(m_axi_OUT_r_ARQOS),
    .ARREGION(m_axi_OUT_r_ARREGION),
    .ARUSER(m_axi_OUT_r_ARUSER),
    .RVALID(m_axi_OUT_r_RVALID),
    .RREADY(m_axi_OUT_r_RREADY),
    .RDATA(m_axi_OUT_r_RDATA),
    .RLAST(m_axi_OUT_r_RLAST),
    .RID(m_axi_OUT_r_RID),
    .RUSER(m_axi_OUT_r_RUSER),
    .RRESP(m_axi_OUT_r_RRESP),
    .BVALID(m_axi_OUT_r_BVALID),
    .BREADY(m_axi_OUT_r_BREADY),
    .BRESP(m_axi_OUT_r_BRESP),
    .BID(m_axi_OUT_r_BID),
    .BUSER(m_axi_OUT_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(OUT_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(OUT_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(OUT_r_RDATA),
    .I_RID(OUT_r_RID),
    .I_RUSER(OUT_r_RUSER),
    .I_RRESP(OUT_r_RRESP),
    .I_RLAST(OUT_r_RLAST),
    .I_AWVALID(OUT_r_AWVALID),
    .I_AWREADY(OUT_r_AWREADY),
    .I_AWADDR(grp_compute_output_fu_659_m_axi_out_V_AWADDR),
    .I_AWID(grp_compute_output_fu_659_m_axi_out_V_AWID),
    .I_AWLEN(grp_compute_output_fu_659_m_axi_out_V_AWLEN),
    .I_AWSIZE(grp_compute_output_fu_659_m_axi_out_V_AWSIZE),
    .I_AWLOCK(grp_compute_output_fu_659_m_axi_out_V_AWLOCK),
    .I_AWCACHE(grp_compute_output_fu_659_m_axi_out_V_AWCACHE),
    .I_AWQOS(grp_compute_output_fu_659_m_axi_out_V_AWQOS),
    .I_AWPROT(grp_compute_output_fu_659_m_axi_out_V_AWPROT),
    .I_AWUSER(grp_compute_output_fu_659_m_axi_out_V_AWUSER),
    .I_AWBURST(grp_compute_output_fu_659_m_axi_out_V_AWBURST),
    .I_AWREGION(grp_compute_output_fu_659_m_axi_out_V_AWREGION),
    .I_WVALID(OUT_r_WVALID),
    .I_WREADY(OUT_r_WREADY),
    .I_WDATA(grp_compute_output_fu_659_m_axi_out_V_WDATA),
    .I_WID(grp_compute_output_fu_659_m_axi_out_V_WID),
    .I_WUSER(grp_compute_output_fu_659_m_axi_out_V_WUSER),
    .I_WLAST(grp_compute_output_fu_659_m_axi_out_V_WLAST),
    .I_WSTRB(grp_compute_output_fu_659_m_axi_out_V_WSTRB),
    .I_BVALID(OUT_r_BVALID),
    .I_BREADY(OUT_r_BREADY),
    .I_BRESP(OUT_r_BRESP),
    .I_BID(OUT_r_BID),
    .I_BUSER(OUT_r_BUSER)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff1_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff1_0_V_address0),
    .ce0(fm_in_buff1_0_V_ce0),
    .we0(fm_in_buff1_0_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_0_V_d0),
    .q0(fm_in_buff1_0_V_q0)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff1_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff1_1_V_address0),
    .ce0(fm_in_buff1_1_V_ce0),
    .we0(fm_in_buff1_1_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_1_V_d0),
    .q0(fm_in_buff1_1_V_q0)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff1_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff1_2_V_address0),
    .ce0(fm_in_buff1_2_V_ce0),
    .we0(fm_in_buff1_2_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_2_V_d0),
    .q0(fm_in_buff1_2_V_q0)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff2_0_V_address0),
    .ce0(fm_in_buff2_0_V_ce0),
    .we0(fm_in_buff2_0_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_0_V_d0),
    .q0(fm_in_buff2_0_V_q0)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff2_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff2_1_V_address0),
    .ce0(fm_in_buff2_1_V_ce0),
    .we0(fm_in_buff2_1_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_1_V_d0),
    .q0(fm_in_buff2_1_V_q0)
);

conv_fm_in_buff1_ibs #(
    .DataWidth( 16 ),
    .AddressRange( 3721 ),
    .AddressWidth( 12 ))
fm_in_buff2_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fm_in_buff2_2_V_address0),
    .ce0(fm_in_buff2_2_V_ce0),
    .we0(fm_in_buff2_2_V_we0),
    .d0(grp_load_input_fu_740_fm_in_buff_2_V_d0),
    .q0(fm_in_buff2_2_V_q0)
);

compute_output grp_compute_output_fu_659(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_compute_output_fu_659_ap_start),
    .ap_done(grp_compute_output_fu_659_ap_done),
    .ap_idle(grp_compute_output_fu_659_ap_idle),
    .ap_ready(grp_compute_output_fu_659_ap_ready),
    .m_axi_weight_V_AWVALID(grp_compute_output_fu_659_m_axi_weight_V_AWVALID),
    .m_axi_weight_V_AWREADY(1'b0),
    .m_axi_weight_V_AWADDR(grp_compute_output_fu_659_m_axi_weight_V_AWADDR),
    .m_axi_weight_V_AWID(grp_compute_output_fu_659_m_axi_weight_V_AWID),
    .m_axi_weight_V_AWLEN(grp_compute_output_fu_659_m_axi_weight_V_AWLEN),
    .m_axi_weight_V_AWSIZE(grp_compute_output_fu_659_m_axi_weight_V_AWSIZE),
    .m_axi_weight_V_AWBURST(grp_compute_output_fu_659_m_axi_weight_V_AWBURST),
    .m_axi_weight_V_AWLOCK(grp_compute_output_fu_659_m_axi_weight_V_AWLOCK),
    .m_axi_weight_V_AWCACHE(grp_compute_output_fu_659_m_axi_weight_V_AWCACHE),
    .m_axi_weight_V_AWPROT(grp_compute_output_fu_659_m_axi_weight_V_AWPROT),
    .m_axi_weight_V_AWQOS(grp_compute_output_fu_659_m_axi_weight_V_AWQOS),
    .m_axi_weight_V_AWREGION(grp_compute_output_fu_659_m_axi_weight_V_AWREGION),
    .m_axi_weight_V_AWUSER(grp_compute_output_fu_659_m_axi_weight_V_AWUSER),
    .m_axi_weight_V_WVALID(grp_compute_output_fu_659_m_axi_weight_V_WVALID),
    .m_axi_weight_V_WREADY(1'b0),
    .m_axi_weight_V_WDATA(grp_compute_output_fu_659_m_axi_weight_V_WDATA),
    .m_axi_weight_V_WSTRB(grp_compute_output_fu_659_m_axi_weight_V_WSTRB),
    .m_axi_weight_V_WLAST(grp_compute_output_fu_659_m_axi_weight_V_WLAST),
    .m_axi_weight_V_WID(grp_compute_output_fu_659_m_axi_weight_V_WID),
    .m_axi_weight_V_WUSER(grp_compute_output_fu_659_m_axi_weight_V_WUSER),
    .m_axi_weight_V_ARVALID(grp_compute_output_fu_659_m_axi_weight_V_ARVALID),
    .m_axi_weight_V_ARREADY(W_ARREADY),
    .m_axi_weight_V_ARADDR(grp_compute_output_fu_659_m_axi_weight_V_ARADDR),
    .m_axi_weight_V_ARID(grp_compute_output_fu_659_m_axi_weight_V_ARID),
    .m_axi_weight_V_ARLEN(grp_compute_output_fu_659_m_axi_weight_V_ARLEN),
    .m_axi_weight_V_ARSIZE(grp_compute_output_fu_659_m_axi_weight_V_ARSIZE),
    .m_axi_weight_V_ARBURST(grp_compute_output_fu_659_m_axi_weight_V_ARBURST),
    .m_axi_weight_V_ARLOCK(grp_compute_output_fu_659_m_axi_weight_V_ARLOCK),
    .m_axi_weight_V_ARCACHE(grp_compute_output_fu_659_m_axi_weight_V_ARCACHE),
    .m_axi_weight_V_ARPROT(grp_compute_output_fu_659_m_axi_weight_V_ARPROT),
    .m_axi_weight_V_ARQOS(grp_compute_output_fu_659_m_axi_weight_V_ARQOS),
    .m_axi_weight_V_ARREGION(grp_compute_output_fu_659_m_axi_weight_V_ARREGION),
    .m_axi_weight_V_ARUSER(grp_compute_output_fu_659_m_axi_weight_V_ARUSER),
    .m_axi_weight_V_RVALID(W_RVALID),
    .m_axi_weight_V_RREADY(grp_compute_output_fu_659_m_axi_weight_V_RREADY),
    .m_axi_weight_V_RDATA(W_RDATA),
    .m_axi_weight_V_RLAST(W_RLAST),
    .m_axi_weight_V_RID(W_RID),
    .m_axi_weight_V_RUSER(W_RUSER),
    .m_axi_weight_V_RRESP(W_RRESP),
    .m_axi_weight_V_BVALID(1'b0),
    .m_axi_weight_V_BREADY(grp_compute_output_fu_659_m_axi_weight_V_BREADY),
    .m_axi_weight_V_BRESP(2'd0),
    .m_axi_weight_V_BID(1'd0),
    .m_axi_weight_V_BUSER(1'd0),
    .weight_V_offset(weight_V7_reg_2203),
    .m_axi_out_V_AWVALID(grp_compute_output_fu_659_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(OUT_r_AWREADY),
    .m_axi_out_V_AWADDR(grp_compute_output_fu_659_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_compute_output_fu_659_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_compute_output_fu_659_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_compute_output_fu_659_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_compute_output_fu_659_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_compute_output_fu_659_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_compute_output_fu_659_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_compute_output_fu_659_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_compute_output_fu_659_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_compute_output_fu_659_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_compute_output_fu_659_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_compute_output_fu_659_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(OUT_r_WREADY),
    .m_axi_out_V_WDATA(grp_compute_output_fu_659_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_compute_output_fu_659_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_compute_output_fu_659_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_compute_output_fu_659_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_compute_output_fu_659_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_compute_output_fu_659_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_compute_output_fu_659_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_compute_output_fu_659_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_compute_output_fu_659_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_compute_output_fu_659_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_compute_output_fu_659_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_compute_output_fu_659_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_compute_output_fu_659_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_compute_output_fu_659_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_compute_output_fu_659_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_compute_output_fu_659_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_compute_output_fu_659_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_compute_output_fu_659_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(64'd0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'd0),
    .m_axi_out_V_RUSER(1'd0),
    .m_axi_out_V_RRESP(2'd0),
    .m_axi_out_V_BVALID(OUT_r_BVALID),
    .m_axi_out_V_BREADY(grp_compute_output_fu_659_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(OUT_r_BRESP),
    .m_axi_out_V_BID(OUT_r_BID),
    .m_axi_out_V_BUSER(OUT_r_BUSER),
    .out_V_offset(out_V1_reg_2192),
    .fm_in_buff_0_V_address0(grp_compute_output_fu_659_fm_in_buff_0_V_address0),
    .fm_in_buff_0_V_ce0(grp_compute_output_fu_659_fm_in_buff_0_V_ce0),
    .fm_in_buff_0_V_q0(grp_compute_output_fu_659_fm_in_buff_0_V_q0),
    .fm_in_buff_1_V_address0(grp_compute_output_fu_659_fm_in_buff_1_V_address0),
    .fm_in_buff_1_V_ce0(grp_compute_output_fu_659_fm_in_buff_1_V_ce0),
    .fm_in_buff_1_V_q0(grp_compute_output_fu_659_fm_in_buff_1_V_q0),
    .fm_in_buff_2_V_address0(grp_compute_output_fu_659_fm_in_buff_2_V_address0),
    .fm_in_buff_2_V_ce0(grp_compute_output_fu_659_fm_in_buff_2_V_ce0),
    .fm_in_buff_2_V_q0(grp_compute_output_fu_659_fm_in_buff_2_V_q0),
    .bias_buff_0_V_read(reg_1016),
    .bias_buff_1_V_read(reg_1021),
    .bias_buff_2_V_read(reg_1026),
    .bias_buff_3_V_read(reg_1031),
    .bias_buff_4_V_read(reg_1036),
    .bias_buff_5_V_read(reg_1041),
    .bias_buff_6_V_read(reg_1046),
    .bias_buff_7_V_read(reg_1051),
    .bias_buff_8_V_read(reg_1056),
    .bias_buff_9_V_read(reg_1061),
    .bias_buff_10_V_read(reg_1066),
    .bias_buff_11_V_read(reg_1071),
    .bias_buff_12_V_read(reg_1076),
    .bias_buff_13_V_read(reg_1081),
    .bias_buff_14_V_read(reg_1086),
    .bias_buff_15_V_read(reg_1091),
    .bias_buff_16_V_read(reg_1096),
    .bias_buff_17_V_read(reg_1101),
    .bias_buff_18_V_read(reg_1106),
    .bias_buff_19_V_read(reg_1111),
    .bias_buff_20_V_read(reg_1116),
    .bias_buff_21_V_read(reg_1121),
    .bias_buff_22_V_read(reg_1126),
    .bias_buff_23_V_read(reg_1131),
    .bias_buff_24_V_read(reg_1136),
    .bias_buff_25_V_read(reg_1141),
    .bias_buff_26_V_read(reg_1146),
    .bias_buff_27_V_read(reg_1151),
    .bias_buff_28_V_read(reg_1156),
    .bias_buff_29_V_read(reg_1161),
    .bias_buff_30_V_read(reg_1166),
    .bias_buff_31_V_read(reg_1171),
    .bias_buff_32_V_read(reg_1176),
    .bias_buff_33_V_read(reg_1181),
    .bias_buff_34_V_read(reg_1186),
    .bias_buff_35_V_read(reg_1191),
    .bias_buff_36_V_read(reg_1196),
    .bias_buff_37_V_read(reg_1201),
    .bias_buff_38_V_read(reg_1206),
    .bias_buff_39_V_read(reg_1211),
    .bias_buff_40_V_read(reg_1216),
    .bias_buff_41_V_read(reg_1221),
    .bias_buff_42_V_read(reg_1226),
    .bias_buff_43_V_read(reg_1231),
    .bias_buff_44_V_read(reg_1236),
    .bias_buff_45_V_read(reg_1241),
    .bias_buff_46_V_read(reg_1246),
    .bias_buff_47_V_read(reg_1251),
    .bias_buff_48_V_read(reg_1256),
    .bias_buff_49_V_read(reg_1261),
    .bias_buff_50_V_read(reg_1266),
    .bias_buff_51_V_read(reg_1271),
    .bias_buff_52_V_read(reg_1276),
    .bias_buff_53_V_read(reg_1281),
    .bias_buff_54_V_read(reg_1286),
    .bias_buff_55_V_read(reg_1291),
    .bias_buff_56_V_read(reg_1296),
    .bias_buff_57_V_read(reg_1301),
    .bias_buff_58_V_read(reg_1306),
    .bias_buff_59_V_read(reg_1311),
    .bias_buff_60_V_read(reg_1316),
    .bias_buff_61_V_read(reg_1321),
    .bias_buff_62_V_read(reg_1326),
    .bias_buff_63_V_read(reg_1331),
    .row(grp_compute_output_fu_659_row),
    .col(grp_compute_output_fu_659_col)
);

load_input grp_load_input_fu_740(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_load_input_fu_740_ap_start),
    .ap_done(grp_load_input_fu_740_ap_done),
    .ap_idle(grp_load_input_fu_740_ap_idle),
    .ap_ready(grp_load_input_fu_740_ap_ready),
    .m_axi_in1_V_AWVALID(grp_load_input_fu_740_m_axi_in1_V_AWVALID),
    .m_axi_in1_V_AWREADY(1'b0),
    .m_axi_in1_V_AWADDR(grp_load_input_fu_740_m_axi_in1_V_AWADDR),
    .m_axi_in1_V_AWID(grp_load_input_fu_740_m_axi_in1_V_AWID),
    .m_axi_in1_V_AWLEN(grp_load_input_fu_740_m_axi_in1_V_AWLEN),
    .m_axi_in1_V_AWSIZE(grp_load_input_fu_740_m_axi_in1_V_AWSIZE),
    .m_axi_in1_V_AWBURST(grp_load_input_fu_740_m_axi_in1_V_AWBURST),
    .m_axi_in1_V_AWLOCK(grp_load_input_fu_740_m_axi_in1_V_AWLOCK),
    .m_axi_in1_V_AWCACHE(grp_load_input_fu_740_m_axi_in1_V_AWCACHE),
    .m_axi_in1_V_AWPROT(grp_load_input_fu_740_m_axi_in1_V_AWPROT),
    .m_axi_in1_V_AWQOS(grp_load_input_fu_740_m_axi_in1_V_AWQOS),
    .m_axi_in1_V_AWREGION(grp_load_input_fu_740_m_axi_in1_V_AWREGION),
    .m_axi_in1_V_AWUSER(grp_load_input_fu_740_m_axi_in1_V_AWUSER),
    .m_axi_in1_V_WVALID(grp_load_input_fu_740_m_axi_in1_V_WVALID),
    .m_axi_in1_V_WREADY(1'b0),
    .m_axi_in1_V_WDATA(grp_load_input_fu_740_m_axi_in1_V_WDATA),
    .m_axi_in1_V_WSTRB(grp_load_input_fu_740_m_axi_in1_V_WSTRB),
    .m_axi_in1_V_WLAST(grp_load_input_fu_740_m_axi_in1_V_WLAST),
    .m_axi_in1_V_WID(grp_load_input_fu_740_m_axi_in1_V_WID),
    .m_axi_in1_V_WUSER(grp_load_input_fu_740_m_axi_in1_V_WUSER),
    .m_axi_in1_V_ARVALID(grp_load_input_fu_740_m_axi_in1_V_ARVALID),
    .m_axi_in1_V_ARREADY(IN1_ARREADY),
    .m_axi_in1_V_ARADDR(grp_load_input_fu_740_m_axi_in1_V_ARADDR),
    .m_axi_in1_V_ARID(grp_load_input_fu_740_m_axi_in1_V_ARID),
    .m_axi_in1_V_ARLEN(grp_load_input_fu_740_m_axi_in1_V_ARLEN),
    .m_axi_in1_V_ARSIZE(grp_load_input_fu_740_m_axi_in1_V_ARSIZE),
    .m_axi_in1_V_ARBURST(grp_load_input_fu_740_m_axi_in1_V_ARBURST),
    .m_axi_in1_V_ARLOCK(grp_load_input_fu_740_m_axi_in1_V_ARLOCK),
    .m_axi_in1_V_ARCACHE(grp_load_input_fu_740_m_axi_in1_V_ARCACHE),
    .m_axi_in1_V_ARPROT(grp_load_input_fu_740_m_axi_in1_V_ARPROT),
    .m_axi_in1_V_ARQOS(grp_load_input_fu_740_m_axi_in1_V_ARQOS),
    .m_axi_in1_V_ARREGION(grp_load_input_fu_740_m_axi_in1_V_ARREGION),
    .m_axi_in1_V_ARUSER(grp_load_input_fu_740_m_axi_in1_V_ARUSER),
    .m_axi_in1_V_RVALID(IN1_RVALID),
    .m_axi_in1_V_RREADY(grp_load_input_fu_740_m_axi_in1_V_RREADY),
    .m_axi_in1_V_RDATA(IN1_RDATA),
    .m_axi_in1_V_RLAST(IN1_RLAST),
    .m_axi_in1_V_RID(IN1_RID),
    .m_axi_in1_V_RUSER(IN1_RUSER),
    .m_axi_in1_V_RRESP(IN1_RRESP),
    .m_axi_in1_V_BVALID(1'b0),
    .m_axi_in1_V_BREADY(grp_load_input_fu_740_m_axi_in1_V_BREADY),
    .m_axi_in1_V_BRESP(2'd0),
    .m_axi_in1_V_BID(1'd0),
    .m_axi_in1_V_BUSER(1'd0),
    .in1_V_offset(in1_V1_reg_2218),
    .m_axi_in2_V_AWVALID(grp_load_input_fu_740_m_axi_in2_V_AWVALID),
    .m_axi_in2_V_AWREADY(1'b0),
    .m_axi_in2_V_AWADDR(grp_load_input_fu_740_m_axi_in2_V_AWADDR),
    .m_axi_in2_V_AWID(grp_load_input_fu_740_m_axi_in2_V_AWID),
    .m_axi_in2_V_AWLEN(grp_load_input_fu_740_m_axi_in2_V_AWLEN),
    .m_axi_in2_V_AWSIZE(grp_load_input_fu_740_m_axi_in2_V_AWSIZE),
    .m_axi_in2_V_AWBURST(grp_load_input_fu_740_m_axi_in2_V_AWBURST),
    .m_axi_in2_V_AWLOCK(grp_load_input_fu_740_m_axi_in2_V_AWLOCK),
    .m_axi_in2_V_AWCACHE(grp_load_input_fu_740_m_axi_in2_V_AWCACHE),
    .m_axi_in2_V_AWPROT(grp_load_input_fu_740_m_axi_in2_V_AWPROT),
    .m_axi_in2_V_AWQOS(grp_load_input_fu_740_m_axi_in2_V_AWQOS),
    .m_axi_in2_V_AWREGION(grp_load_input_fu_740_m_axi_in2_V_AWREGION),
    .m_axi_in2_V_AWUSER(grp_load_input_fu_740_m_axi_in2_V_AWUSER),
    .m_axi_in2_V_WVALID(grp_load_input_fu_740_m_axi_in2_V_WVALID),
    .m_axi_in2_V_WREADY(1'b0),
    .m_axi_in2_V_WDATA(grp_load_input_fu_740_m_axi_in2_V_WDATA),
    .m_axi_in2_V_WSTRB(grp_load_input_fu_740_m_axi_in2_V_WSTRB),
    .m_axi_in2_V_WLAST(grp_load_input_fu_740_m_axi_in2_V_WLAST),
    .m_axi_in2_V_WID(grp_load_input_fu_740_m_axi_in2_V_WID),
    .m_axi_in2_V_WUSER(grp_load_input_fu_740_m_axi_in2_V_WUSER),
    .m_axi_in2_V_ARVALID(grp_load_input_fu_740_m_axi_in2_V_ARVALID),
    .m_axi_in2_V_ARREADY(IN2_ARREADY),
    .m_axi_in2_V_ARADDR(grp_load_input_fu_740_m_axi_in2_V_ARADDR),
    .m_axi_in2_V_ARID(grp_load_input_fu_740_m_axi_in2_V_ARID),
    .m_axi_in2_V_ARLEN(grp_load_input_fu_740_m_axi_in2_V_ARLEN),
    .m_axi_in2_V_ARSIZE(grp_load_input_fu_740_m_axi_in2_V_ARSIZE),
    .m_axi_in2_V_ARBURST(grp_load_input_fu_740_m_axi_in2_V_ARBURST),
    .m_axi_in2_V_ARLOCK(grp_load_input_fu_740_m_axi_in2_V_ARLOCK),
    .m_axi_in2_V_ARCACHE(grp_load_input_fu_740_m_axi_in2_V_ARCACHE),
    .m_axi_in2_V_ARPROT(grp_load_input_fu_740_m_axi_in2_V_ARPROT),
    .m_axi_in2_V_ARQOS(grp_load_input_fu_740_m_axi_in2_V_ARQOS),
    .m_axi_in2_V_ARREGION(grp_load_input_fu_740_m_axi_in2_V_ARREGION),
    .m_axi_in2_V_ARUSER(grp_load_input_fu_740_m_axi_in2_V_ARUSER),
    .m_axi_in2_V_RVALID(IN2_RVALID),
    .m_axi_in2_V_RREADY(grp_load_input_fu_740_m_axi_in2_V_RREADY),
    .m_axi_in2_V_RDATA(IN2_RDATA),
    .m_axi_in2_V_RLAST(IN2_RLAST),
    .m_axi_in2_V_RID(IN2_RID),
    .m_axi_in2_V_RUSER(IN2_RUSER),
    .m_axi_in2_V_RRESP(IN2_RRESP),
    .m_axi_in2_V_BVALID(1'b0),
    .m_axi_in2_V_BREADY(grp_load_input_fu_740_m_axi_in2_V_BREADY),
    .m_axi_in2_V_BRESP(2'd0),
    .m_axi_in2_V_BID(1'd0),
    .m_axi_in2_V_BUSER(1'd0),
    .in2_V_offset(in2_V3_reg_2213),
    .m_axi_in3_V_AWVALID(grp_load_input_fu_740_m_axi_in3_V_AWVALID),
    .m_axi_in3_V_AWREADY(1'b0),
    .m_axi_in3_V_AWADDR(grp_load_input_fu_740_m_axi_in3_V_AWADDR),
    .m_axi_in3_V_AWID(grp_load_input_fu_740_m_axi_in3_V_AWID),
    .m_axi_in3_V_AWLEN(grp_load_input_fu_740_m_axi_in3_V_AWLEN),
    .m_axi_in3_V_AWSIZE(grp_load_input_fu_740_m_axi_in3_V_AWSIZE),
    .m_axi_in3_V_AWBURST(grp_load_input_fu_740_m_axi_in3_V_AWBURST),
    .m_axi_in3_V_AWLOCK(grp_load_input_fu_740_m_axi_in3_V_AWLOCK),
    .m_axi_in3_V_AWCACHE(grp_load_input_fu_740_m_axi_in3_V_AWCACHE),
    .m_axi_in3_V_AWPROT(grp_load_input_fu_740_m_axi_in3_V_AWPROT),
    .m_axi_in3_V_AWQOS(grp_load_input_fu_740_m_axi_in3_V_AWQOS),
    .m_axi_in3_V_AWREGION(grp_load_input_fu_740_m_axi_in3_V_AWREGION),
    .m_axi_in3_V_AWUSER(grp_load_input_fu_740_m_axi_in3_V_AWUSER),
    .m_axi_in3_V_WVALID(grp_load_input_fu_740_m_axi_in3_V_WVALID),
    .m_axi_in3_V_WREADY(1'b0),
    .m_axi_in3_V_WDATA(grp_load_input_fu_740_m_axi_in3_V_WDATA),
    .m_axi_in3_V_WSTRB(grp_load_input_fu_740_m_axi_in3_V_WSTRB),
    .m_axi_in3_V_WLAST(grp_load_input_fu_740_m_axi_in3_V_WLAST),
    .m_axi_in3_V_WID(grp_load_input_fu_740_m_axi_in3_V_WID),
    .m_axi_in3_V_WUSER(grp_load_input_fu_740_m_axi_in3_V_WUSER),
    .m_axi_in3_V_ARVALID(grp_load_input_fu_740_m_axi_in3_V_ARVALID),
    .m_axi_in3_V_ARREADY(IN3_ARREADY),
    .m_axi_in3_V_ARADDR(grp_load_input_fu_740_m_axi_in3_V_ARADDR),
    .m_axi_in3_V_ARID(grp_load_input_fu_740_m_axi_in3_V_ARID),
    .m_axi_in3_V_ARLEN(grp_load_input_fu_740_m_axi_in3_V_ARLEN),
    .m_axi_in3_V_ARSIZE(grp_load_input_fu_740_m_axi_in3_V_ARSIZE),
    .m_axi_in3_V_ARBURST(grp_load_input_fu_740_m_axi_in3_V_ARBURST),
    .m_axi_in3_V_ARLOCK(grp_load_input_fu_740_m_axi_in3_V_ARLOCK),
    .m_axi_in3_V_ARCACHE(grp_load_input_fu_740_m_axi_in3_V_ARCACHE),
    .m_axi_in3_V_ARPROT(grp_load_input_fu_740_m_axi_in3_V_ARPROT),
    .m_axi_in3_V_ARQOS(grp_load_input_fu_740_m_axi_in3_V_ARQOS),
    .m_axi_in3_V_ARREGION(grp_load_input_fu_740_m_axi_in3_V_ARREGION),
    .m_axi_in3_V_ARUSER(grp_load_input_fu_740_m_axi_in3_V_ARUSER),
    .m_axi_in3_V_RVALID(IN3_RVALID),
    .m_axi_in3_V_RREADY(grp_load_input_fu_740_m_axi_in3_V_RREADY),
    .m_axi_in3_V_RDATA(IN3_RDATA),
    .m_axi_in3_V_RLAST(IN3_RLAST),
    .m_axi_in3_V_RID(IN3_RID),
    .m_axi_in3_V_RUSER(IN3_RUSER),
    .m_axi_in3_V_RRESP(IN3_RRESP),
    .m_axi_in3_V_BVALID(1'b0),
    .m_axi_in3_V_BREADY(grp_load_input_fu_740_m_axi_in3_V_BREADY),
    .m_axi_in3_V_BRESP(2'd0),
    .m_axi_in3_V_BID(1'd0),
    .m_axi_in3_V_BUSER(1'd0),
    .in3_V_offset(in3_V5_reg_2208),
    .fm_in_buff_0_V_address0(grp_load_input_fu_740_fm_in_buff_0_V_address0),
    .fm_in_buff_0_V_ce0(grp_load_input_fu_740_fm_in_buff_0_V_ce0),
    .fm_in_buff_0_V_we0(grp_load_input_fu_740_fm_in_buff_0_V_we0),
    .fm_in_buff_0_V_d0(grp_load_input_fu_740_fm_in_buff_0_V_d0),
    .fm_in_buff_1_V_address0(grp_load_input_fu_740_fm_in_buff_1_V_address0),
    .fm_in_buff_1_V_ce0(grp_load_input_fu_740_fm_in_buff_1_V_ce0),
    .fm_in_buff_1_V_we0(grp_load_input_fu_740_fm_in_buff_1_V_we0),
    .fm_in_buff_1_V_d0(grp_load_input_fu_740_fm_in_buff_1_V_d0),
    .fm_in_buff_2_V_address0(grp_load_input_fu_740_fm_in_buff_2_V_address0),
    .fm_in_buff_2_V_ce0(grp_load_input_fu_740_fm_in_buff_2_V_ce0),
    .fm_in_buff_2_V_we0(grp_load_input_fu_740_fm_in_buff_2_V_we0),
    .fm_in_buff_2_V_d0(grp_load_input_fu_740_fm_in_buff_2_V_d0),
    .fm_row(grp_load_input_fu_740_fm_row),
    .fm_col(grp_load_input_fu_740_fm_col)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_compute_output_fu_659_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
            grp_compute_output_fu_659_ap_start_reg <= 1'b1;
        end else if ((grp_compute_output_fu_659_ap_ready == 1'b1)) begin
            grp_compute_output_fu_659_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_load_input_fu_740_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
            grp_load_input_fu_740_ap_start_reg <= 1'b1;
        end else if ((grp_load_input_fu_740_ap_ready == 1'b1)) begin
            grp_load_input_fu_740_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln174_1_fu_1802_p2 == 1'd0) | (icmp_ln174_fu_1791_p2 == 1'd0)))) begin
        col_assign_reg_632 <= col_reg_2243;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_load_input_fu_740_ap_done == 1'b1))) begin
        col_assign_reg_632 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_fu_1406_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln149_reg_598 <= add_ln149_fu_1412_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln149_reg_598 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln174_1_fu_1802_p2 == 1'd0) | (icmp_ln174_fu_1791_p2 == 1'd0)))) begin
        pp_0_reg_609 <= pp_1_reg_644;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_load_input_fu_740_ap_done == 1'b1))) begin
        pp_0_reg_609 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        pp_1_reg_644 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
        pp_1_reg_644 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln174_1_fu_1802_p2 == 1'd0) | (icmp_ln174_fu_1791_p2 == 1'd0)))) begin
        row_assign_reg_620 <= row_reg_2236;
    end else if (((1'b1 == ap_CS_fsm_state12) & (grp_load_input_fu_740_ap_done == 1'b1))) begin
        row_assign_reg_620 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        W_addr_reg_2197[30 : 0] <= empty_fu_1356_p1[30 : 0];
        in1_V1_reg_2218 <= {{in1_V[31:1]}};
        in2_V3_reg_2213 <= {{in2_V[31:1]}};
        in3_V5_reg_2208 <= {{in3_V[31:1]}};
        out_V1_reg_2192 <= {{out_V[31:3]}};
        weight_V7_reg_2203 <= {{weight_V[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_10_fu_310 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_11_fu_314 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_12_fu_318 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_13_fu_322 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_14_fu_326 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_15_fu_330 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_16_fu_334 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_17_fu_338 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_18_fu_342 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_19_fu_346 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_1_fu_274 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_20_fu_350 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_21_fu_354 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_22_fu_358 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_23_fu_362 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_24_fu_366 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_25_fu_370 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_26_fu_374 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_27_fu_378 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_28_fu_382 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_29_fu_386 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_2_fu_278 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_30_fu_390 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_31_fu_394 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_32_fu_398 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_33_fu_402 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_34_fu_406 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_35_fu_410 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_36_fu_414 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_37_fu_418 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_38_fu_422 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_39_fu_426 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_3_fu_282 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_40_fu_430 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_41_fu_434 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_42_fu_438 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_43_fu_442 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd44) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_44_fu_446 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd45) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_45_fu_450 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd46) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_46_fu_454 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd47) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_47_fu_458 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd48) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_48_fu_462 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd49) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_49_fu_466 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_4_fu_286 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd50) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_50_fu_470 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd51) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_51_fu_474 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd52) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_52_fu_478 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd53) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_53_fu_482 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd54) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_54_fu_486 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd55) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_55_fu_490 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd56) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_56_fu_494 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd57) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_57_fu_498 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd58) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_58_fu_502 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd59) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_59_fu_506 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_5_fu_290 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd60) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_60_fu_510 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd61) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_61_fu_514 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd62) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_62_fu_518 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd63) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_63_fu_522 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_6_fu_294 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_7_fu_298 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_8_fu_302 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_9_fu_306 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln149_reg_2232 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bias_buff_63_V_fu_270 <= W_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        col_reg_2243 <= col_fu_1768_p3;
        row_reg_2236 <= row_fu_1760_p3;
        trunc_ln162_1_reg_2255 <= trunc_ln162_1_fu_1781_p1;
        trunc_ln162_reg_2250 <= trunc_ln162_fu_1776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)))) begin
        reg_1016 <= bias_buff_63_V_fu_270;
        reg_1021 <= bias_buff_63_V_1_fu_274;
        reg_1026 <= bias_buff_63_V_2_fu_278;
        reg_1031 <= bias_buff_63_V_3_fu_282;
        reg_1036 <= bias_buff_63_V_4_fu_286;
        reg_1041 <= bias_buff_63_V_5_fu_290;
        reg_1046 <= bias_buff_63_V_6_fu_294;
        reg_1051 <= bias_buff_63_V_7_fu_298;
        reg_1056 <= bias_buff_63_V_8_fu_302;
        reg_1061 <= bias_buff_63_V_9_fu_306;
        reg_1066 <= bias_buff_63_V_10_fu_310;
        reg_1071 <= bias_buff_63_V_11_fu_314;
        reg_1076 <= bias_buff_63_V_12_fu_318;
        reg_1081 <= bias_buff_63_V_13_fu_322;
        reg_1086 <= bias_buff_63_V_14_fu_326;
        reg_1091 <= bias_buff_63_V_15_fu_330;
        reg_1096 <= bias_buff_63_V_16_fu_334;
        reg_1101 <= bias_buff_63_V_17_fu_338;
        reg_1106 <= bias_buff_63_V_18_fu_342;
        reg_1111 <= bias_buff_63_V_19_fu_346;
        reg_1116 <= bias_buff_63_V_20_fu_350;
        reg_1121 <= bias_buff_63_V_21_fu_354;
        reg_1126 <= bias_buff_63_V_22_fu_358;
        reg_1131 <= bias_buff_63_V_23_fu_362;
        reg_1136 <= bias_buff_63_V_24_fu_366;
        reg_1141 <= bias_buff_63_V_25_fu_370;
        reg_1146 <= bias_buff_63_V_26_fu_374;
        reg_1151 <= bias_buff_63_V_27_fu_378;
        reg_1156 <= bias_buff_63_V_28_fu_382;
        reg_1161 <= bias_buff_63_V_29_fu_386;
        reg_1166 <= bias_buff_63_V_30_fu_390;
        reg_1171 <= bias_buff_63_V_31_fu_394;
        reg_1176 <= bias_buff_63_V_32_fu_398;
        reg_1181 <= bias_buff_63_V_33_fu_402;
        reg_1186 <= bias_buff_63_V_34_fu_406;
        reg_1191 <= bias_buff_63_V_35_fu_410;
        reg_1196 <= bias_buff_63_V_36_fu_414;
        reg_1201 <= bias_buff_63_V_37_fu_418;
        reg_1206 <= bias_buff_63_V_38_fu_422;
        reg_1211 <= bias_buff_63_V_39_fu_426;
        reg_1216 <= bias_buff_63_V_40_fu_430;
        reg_1221 <= bias_buff_63_V_41_fu_434;
        reg_1226 <= bias_buff_63_V_42_fu_438;
        reg_1231 <= bias_buff_63_V_43_fu_442;
        reg_1236 <= bias_buff_63_V_44_fu_446;
        reg_1241 <= bias_buff_63_V_45_fu_450;
        reg_1246 <= bias_buff_63_V_46_fu_454;
        reg_1251 <= bias_buff_63_V_47_fu_458;
        reg_1256 <= bias_buff_63_V_48_fu_462;
        reg_1261 <= bias_buff_63_V_49_fu_466;
        reg_1266 <= bias_buff_63_V_50_fu_470;
        reg_1271 <= bias_buff_63_V_51_fu_474;
        reg_1276 <= bias_buff_63_V_52_fu_478;
        reg_1281 <= bias_buff_63_V_53_fu_482;
        reg_1286 <= bias_buff_63_V_54_fu_486;
        reg_1291 <= bias_buff_63_V_55_fu_490;
        reg_1296 <= bias_buff_63_V_56_fu_494;
        reg_1301 <= bias_buff_63_V_57_fu_498;
        reg_1306 <= bias_buff_63_V_58_fu_502;
        reg_1311 <= bias_buff_63_V_59_fu_506;
        reg_1316 <= bias_buff_63_V_60_fu_510;
        reg_1321 <= bias_buff_63_V_61_fu_514;
        reg_1326 <= bias_buff_63_V_62_fu_518;
        reg_1331 <= bias_buff_63_V_63_fu_522;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln149_fu_1406_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln149_reg_2232 <= trunc_ln149_fu_1418_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN1_ARVALID = grp_load_input_fu_740_m_axi_in1_V_ARVALID;
    end else begin
        IN1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN1_RREADY = grp_load_input_fu_740_m_axi_in1_V_RREADY;
    end else begin
        IN1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN2_ARVALID = grp_load_input_fu_740_m_axi_in2_V_ARVALID;
    end else begin
        IN2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN2_RREADY = grp_load_input_fu_740_m_axi_in2_V_RREADY;
    end else begin
        IN2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN3_ARVALID = grp_load_input_fu_740_m_axi_in3_V_ARVALID;
    end else begin
        IN3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        IN3_RREADY = grp_load_input_fu_740_m_axi_in3_V_RREADY;
    end else begin
        IN3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        OUT_r_AWVALID = grp_compute_output_fu_659_m_axi_out_V_AWVALID;
    end else begin
        OUT_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        OUT_r_BREADY = grp_compute_output_fu_659_m_axi_out_V_BREADY;
    end else begin
        OUT_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        OUT_r_WVALID = grp_compute_output_fu_659_m_axi_out_V_WVALID;
    end else begin
        OUT_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == W_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ARADDR = W_addr_reg_2197;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARADDR = grp_compute_output_fu_659_m_axi_weight_V_ARADDR;
    end else begin
        W_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARBURST = grp_compute_output_fu_659_m_axi_weight_V_ARBURST;
    end else begin
        W_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARCACHE = grp_compute_output_fu_659_m_axi_weight_V_ARCACHE;
    end else begin
        W_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARID = grp_compute_output_fu_659_m_axi_weight_V_ARID;
    end else begin
        W_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == W_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ARLEN = 32'd64;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARLEN = grp_compute_output_fu_659_m_axi_weight_V_ARLEN;
    end else begin
        W_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARLOCK = grp_compute_output_fu_659_m_axi_weight_V_ARLOCK;
    end else begin
        W_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARPROT = grp_compute_output_fu_659_m_axi_weight_V_ARPROT;
    end else begin
        W_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARQOS = grp_compute_output_fu_659_m_axi_weight_V_ARQOS;
    end else begin
        W_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARREGION = grp_compute_output_fu_659_m_axi_weight_V_ARREGION;
    end else begin
        W_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARSIZE = grp_compute_output_fu_659_m_axi_weight_V_ARSIZE;
    end else begin
        W_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARUSER = grp_compute_output_fu_659_m_axi_weight_V_ARUSER;
    end else begin
        W_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == W_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        W_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_ARVALID = grp_compute_output_fu_659_m_axi_weight_V_ARVALID;
    end else begin
        W_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((icmp_ln174_1_fu_1802_p2 == 1'd1) & (ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_1_phi_fu_650_p4 == 1'd0) & (icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        W_RREADY = grp_compute_output_fu_659_m_axi_weight_V_RREADY;
    end else begin
        W_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        W_blk_n_AR = m_axi_W_ARREADY;
    end else begin
        W_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        W_blk_n_R = m_axi_W_RVALID;
    end else begin
        W_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln149_fu_1406_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_0_V_address0 = grp_load_input_fu_740_fm_in_buff_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_0_V_address0 = grp_compute_output_fu_659_fm_in_buff_0_V_address0;
    end else begin
        fm_in_buff1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_0_V_ce0 = grp_load_input_fu_740_fm_in_buff_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_0_V_ce0 = grp_compute_output_fu_659_fm_in_buff_0_V_ce0;
    end else begin
        fm_in_buff1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_0_V_we0 = grp_load_input_fu_740_fm_in_buff_0_V_we0;
    end else begin
        fm_in_buff1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_1_V_address0 = grp_load_input_fu_740_fm_in_buff_1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_1_V_address0 = grp_compute_output_fu_659_fm_in_buff_1_V_address0;
    end else begin
        fm_in_buff1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_1_V_ce0 = grp_load_input_fu_740_fm_in_buff_1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_1_V_ce0 = grp_compute_output_fu_659_fm_in_buff_1_V_ce0;
    end else begin
        fm_in_buff1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_1_V_we0 = grp_load_input_fu_740_fm_in_buff_1_V_we0;
    end else begin
        fm_in_buff1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_2_V_address0 = grp_load_input_fu_740_fm_in_buff_2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_2_V_address0 = grp_compute_output_fu_659_fm_in_buff_2_V_address0;
    end else begin
        fm_in_buff1_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_2_V_ce0 = grp_load_input_fu_740_fm_in_buff_2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff1_2_V_ce0 = grp_compute_output_fu_659_fm_in_buff_2_V_ce0;
    end else begin
        fm_in_buff1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12))) begin
        fm_in_buff1_2_V_we0 = grp_load_input_fu_740_fm_in_buff_2_V_we0;
    end else begin
        fm_in_buff1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_0_V_address0 = grp_load_input_fu_740_fm_in_buff_0_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_0_V_address0 = grp_compute_output_fu_659_fm_in_buff_0_V_address0;
    end else begin
        fm_in_buff2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_0_V_ce0 = grp_load_input_fu_740_fm_in_buff_0_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_0_V_ce0 = grp_compute_output_fu_659_fm_in_buff_0_V_ce0;
    end else begin
        fm_in_buff2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_0_V_we0 = grp_load_input_fu_740_fm_in_buff_0_V_we0;
    end else begin
        fm_in_buff2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_1_V_address0 = grp_load_input_fu_740_fm_in_buff_1_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_1_V_address0 = grp_compute_output_fu_659_fm_in_buff_1_V_address0;
    end else begin
        fm_in_buff2_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_1_V_ce0 = grp_load_input_fu_740_fm_in_buff_1_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_1_V_ce0 = grp_compute_output_fu_659_fm_in_buff_1_V_ce0;
    end else begin
        fm_in_buff2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_1_V_we0 = grp_load_input_fu_740_fm_in_buff_1_V_we0;
    end else begin
        fm_in_buff2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_2_V_address0 = grp_load_input_fu_740_fm_in_buff_2_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_2_V_address0 = grp_compute_output_fu_659_fm_in_buff_2_V_address0;
    end else begin
        fm_in_buff2_2_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_2_V_ce0 = grp_load_input_fu_740_fm_in_buff_2_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        fm_in_buff2_2_V_ce0 = grp_compute_output_fu_659_fm_in_buff_2_V_ce0;
    end else begin
        fm_in_buff2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        fm_in_buff2_2_V_we0 = grp_load_input_fu_740_fm_in_buff_2_V_we0;
    end else begin
        fm_in_buff2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_col = col_reg_2243;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_compute_output_fu_659_col = col_assign_reg_632;
    end else begin
        grp_compute_output_fu_659_col = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_0_V_q0 = fm_in_buff1_0_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_0_V_q0 = fm_in_buff2_0_V_q0;
    end else begin
        grp_compute_output_fu_659_fm_in_buff_0_V_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_1_V_q0 = fm_in_buff1_1_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_1_V_q0 = fm_in_buff2_1_V_q0;
    end else begin
        grp_compute_output_fu_659_fm_in_buff_1_V_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_2_V_q0 = fm_in_buff1_2_V_q0;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_fm_in_buff_2_V_q0 = fm_in_buff2_2_V_q0;
    end else begin
        grp_compute_output_fu_659_fm_in_buff_2_V_q0 = 'bx;
    end
end

always @ (*) begin
    if ((((pp_1_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state17)) | ((pp_1_reg_644 == 1'd0) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_compute_output_fu_659_row = row_reg_2236;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_compute_output_fu_659_row = row_assign_reg_620;
    end else begin
        grp_compute_output_fu_659_row = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_load_input_fu_740_fm_col = trunc_ln162_1_reg_2255;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_input_fu_740_fm_col = 16'd0;
    end else begin
        grp_load_input_fu_740_fm_col = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_load_input_fu_740_fm_row = trunc_ln162_reg_2250;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_load_input_fu_740_fm_row = 16'd0;
    end else begin
        grp_load_input_fu_740_fm_row = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == W_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln149_fu_1406_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln149_fu_1406_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_load_input_fu_740_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((ap_phi_mux_pp_0_phi_fu_613_p4 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (1'b0 == ap_block_state15_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln174_1_fu_1802_p2 == 1'd1) & (icmp_ln174_fu_1791_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (1'b0 == ap_block_state17_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln149_fu_1412_p2 = (phi_ln149_reg_598 + 7'd1);

assign add_ln174_1_fu_1797_p2 = (col_reg_2243 + 32'd28);

assign add_ln174_fu_1786_p2 = (row_reg_2236 + 32'd28);

assign add_ln75_fu_1742_p2 = (32'd28 + col_assign_reg_632);

assign add_ln76_fu_1754_p2 = (32'd28 + row_assign_reg_620);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == W_RVALID) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == W_RVALID) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = (1'b0 == W_RVALID);
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_compute_output_fu_659_ap_done == 1'b0) | (grp_load_input_fu_740_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state15_on_subcall_done = ((grp_compute_output_fu_659_ap_done == 1'b0) | (grp_load_input_fu_740_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state17_on_subcall_done = (((pp_1_reg_644 == 1'd1) & (grp_compute_output_fu_659_ap_done == 1'b0)) | ((pp_1_reg_644 == 1'd0) & (grp_compute_output_fu_659_ap_done == 1'b0)));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_pp_0_phi_fu_613_p4 = pp_0_reg_609;

assign ap_phi_mux_pp_1_phi_fu_650_p4 = pp_1_reg_644;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias_V9_fu_1346_p4 = {{bias_V[31:1]}};

assign col_fu_1768_p3 = ((icmp_ln75_fu_1748_p2[0:0] === 1'b1) ? add_ln75_fu_1742_p2 : 32'd0);

assign empty_fu_1356_p1 = bias_V9_fu_1346_p4;

assign grp_compute_output_fu_659_ap_start = grp_compute_output_fu_659_ap_start_reg;

assign grp_load_input_fu_740_ap_start = grp_load_input_fu_740_ap_start_reg;

assign icmp_ln149_fu_1406_p2 = ((phi_ln149_reg_598 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln174_1_fu_1802_p2 = (($signed(add_ln174_1_fu_1797_p2) > $signed(32'd111)) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_1791_p2 = (($signed(add_ln174_fu_1786_p2) > $signed(32'd111)) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_1748_p2 = (($signed(add_ln75_fu_1742_p2) < $signed(32'd112)) ? 1'b1 : 1'b0);

assign row_fu_1760_p3 = ((icmp_ln75_fu_1748_p2[0:0] === 1'b1) ? row_assign_reg_620 : add_ln76_fu_1754_p2);

assign trunc_ln149_fu_1418_p1 = phi_ln149_reg_598[5:0];

assign trunc_ln162_1_fu_1781_p1 = col_fu_1768_p3[15:0];

assign trunc_ln162_fu_1776_p1 = row_fu_1760_p3[15:0];

always @ (posedge ap_clk) begin
    W_addr_reg_2197[31] <= 1'b0;
end

endmodule //conv
